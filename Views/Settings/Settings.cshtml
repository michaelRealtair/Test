@using Realtair.Framework.Core.Web.Utilities
@model Realtair.Framework.Core.Web.Controllers.SettingsController.ViewModel

@Html.Partial("Menu")

<div id="page-wrapper" class="with-background">
    <div class="container">
        <div class="white-box">
            <h3 class="box-title"><a href="@Model.Entity.GetDetailsUrl(Html.LoggedInUser(), Url)">@Model.Description</a></h3>
            <div class="vtabs customvtab">
                <ul class="nav tabs-vertical">

                    @foreach (var setting in Model.Actions)
                    {
                        <li class="tab @(setting.Description(Html.LoggedInUser()) == Model.SelectedAction.Description(Html.LoggedInUser()) ? "active" : "")">
                            <a data-toggle="tab" href="#tab-@setting.UrlSafeName()">
                                @setting.Description(Html.LoggedInUser())
                            </a>
                        </li>
                    }
                </ul>
                <div class="tab-content">
                    @foreach (var setting in Model.Actions)
                    {
                        <div id="tab-@setting.UrlSafeName()" class="main-form tab-pane fade in @(setting.Description(Html.LoggedInUser()) == Model.SelectedAction.Description(Html.LoggedInUser()) ? "active" : "")">
                            <form method="post" class="form-horizontal" action="/@Model.Entity.UrlSafeName()/@Model.Entity.Id/settings/@setting.UrlSafeName()">
                                @if (setting.HasValidated && !setting.IsValid)
                                {
                                    if (setting.Errors.Where(e => e.MemberNames.Count() == 0).Count() > 0)
                                    {
                                        <div class="alert alert-danger">
                                            @foreach (var error in setting.Errors.Where(e => e.MemberNames.Count() == 0))
                                            {
                                                <p>@error.ErrorMessage</p>
                                            }
                                        </div>
                                    }
                                }
                                else if (setting == Model.SelectedAction && Model.Submitted)
                                {
                                    <div class="alert alert-success">
                                        <p>Success!</p>
                                    </div>
                                }

                                @foreach (var field in setting.Fields)
                                {
                                    var fieldWithReturnType = $"Fields/Settings/_{field.PropertyType.Name}_{field.FieldAttribute.GetType().Name.Substring(0, field.FieldAttribute.GetType().Name.Length - "Attribute".Length)}";
                                    var fieldWithoutReturnType = $"Fields/Settings/_{field.FieldAttribute.GetType().Name.Substring(0, field.FieldAttribute.GetType().Name.Length - "Attribute".Length)}";

                                    <div class="col-md-12">
                                        @if (Html.ViewExists(fieldWithReturnType))
                                        {
                                            @Html.Partial(fieldWithReturnType, field);
                                        }
                                        else if (Html.ViewExists(fieldWithoutReturnType))
                                        {
                                            @Html.Partial(fieldWithoutReturnType, field);
                                        }
                                        else
                                        {
                                            <p>Cannot render field view, looked for both @fieldWithReturnType and @fieldWithoutReturnType</p>
                                        }
                                    </div>
                                }
                                <input autofocus type="submit" value="@setting.Description(Html.LoggedInUser())" class="btn btn-primary pull-right">
                            </form>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@Html.Partial("Footer")
@section Scripts {
    @Html.RenderDelayed()
}