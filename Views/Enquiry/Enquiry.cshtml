@using Realtair.Framework.Core.Web.Utilities
@model Realtair.Framework.Core.Web.Controllers.EnquiryController.EnquiryViewModel
@using Realtair.Framework.Enquiries.Entities;

<body id="page-enquiry" class="with-image-background">

    <div class="modal fade" id="modal-action" tabindex="-1" role="dialog" aria-labelledby="modal-action-Label">
        <div class="vertical-alignment-helper">
            <div class="modal-dialog vertical-align-center">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                            <h4 class="modal-title" id="modal-action-Label">
                                Actions for "@Model.Workflow.Description(Html.LoggedInUser())"
                            </h4>
                        </div>
                        <div class="modal-body">
                            <div class="lst-links-modal">
                                @foreach (var action in Model.Workflow.Actions().WithAccess(Html.LoggedInUser(), ViewContext.DbContext()))
                                {
                                    <form action="@action.GetUrl(Url)" method="@(action.Fields.Count() >= 1 ? "GET" : "POST")">
                                        <input name="ReturnUrl" type="hidden" value="@Request.Url.AbsolutePath" />
                                        <button class="btn btn-default input-block-level form-control" type="submit">@action.Description(Html.LoggedInUser())</button>
                                    </form>
                                }
                                @foreach (var action in Model.Workflow.BaseActions().WithAccess(Html.LoggedInUser(), ViewContext.DbContext()))
                                {
                                    <form action="@action.GetUrl(Url)" method="@(action.Fields.Count() >= 1 ? "GET" : "POST")">
                                        <input name="ReturnUrl" type="hidden" value="@Request.Url.AbsolutePath" />
                                        <button class="btn btn-default input-block-level form-control" type="submit">@action.Description(Html.LoggedInUser())</button>
                                    </form>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal modal-conversation fade" id="modal-current-conversation" tabindex="-1" role="dialog" aria-labelledby="modal-action-Label" style="display: none;">
        <div class="vertical-alignment-helper">
            <div class="modal-dialog vertical-align-center">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                            <h4 class="modal-title" id="modal-action-Label">
                                <span class="icon @Html.IconForDescribable(Model.Workflow as IDescribable)"></span> @Model.Workflow.ActualType().Name.DisplaySafeName()
                                <small>@Model.Workflow.Description(Html.LoggedInUser())</small>
                            </h4>
                        </div>
                        <div class="modal-body">
                            <div class="panel panel-default panel-conversation">
                                <div class="list-group">
                                    @foreach (var user in Model.Conversation.Users.Where(u => u != Html.LoggedInUser()))
                                    {
                                        <div href="#" class="list-group-item">
                                            <span class="img-circle pull-left">@user.Person.Initials</span>
                                            @if (!string.IsNullOrEmpty(user.Person.MobileNo))
                                            {
                                                <a href="tel:@user.Person.MobileNo" class="pull-right">@user.Person.MobileNo</a>
                                            }
                                            <span class="inner-content">
                                                <strong>@user.Person.Name</strong>
                                                <span href="#" class="brand-provider">@user.RoleType</span>
                                            </span>
                                            <div class="clearfix"></div>
                                        </div>
                                    }
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal modal-conversation fade" id="modal-other-conversation" tabindex="-1" role="dialog" aria-labelledby="modal-action-Label" style="display: none;">
        <div class="vertical-alignment-helper">
            <div class="modal-dialog vertical-align-center">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                            <h4 class="modal-title" id="modal-action-Label">
                                <span class="icon icon-comments-o"></span> Other conversation
                            </h4>
                        </div>
                        <div class="modal-body">

                            <div class="panel panel-default panel-conversation">
                                <div class="other-conversartion">
                                    <div class="list-group">
                                        @{
                                            var otherConversationCount = Model.Conversations.Where(c => c != Model.Conversation).Count();
                                            if (otherConversationCount > 0)
                                            {
                                                <div class="other-conversartion">
                                                    <div class="list-group">
                                                        @foreach (var conversation in Model.Conversations)
                                                        {
                                                            if (conversation != Model.Conversation)
                                                            {
                                                                <a href="@conversation.GetUrl(Url)" class="list-group-item ellipsis">
                                                                    <i class="fa fa-comments pull-left" aria-hidden="true"></i>
                                                                    @{
                                                                        var notificationCount = conversation.ActiveNotifications(Html.LoggedInUser(), Model.Workflow).Count(a => a is MessageNotification || (a is EventNotification));
                                                                        if (notificationCount > 0)
                                                                        {
                                                                            <span class="badge pull-right">@notificationCount</span>
                                                                        }
                                                                    }
                                                                    @string.Join(", ", conversation.Users.Where(u => u != Html.LoggedInUser()).Select(u => u.Person.Name + " (" + u.RoleType + ")"))
                                                                    <div class="clearfix"></div>
                                                                </a>
                                                                            }
                                                                        }
                                                    </div>
                                                </div>

                                                                        }
                                        }
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="modal-attachments" tabindex="-1" role="dialog" aria-labelledby="modal-action-Label">
        <div class="vertical-alignment-helper">
            <div class="modal-dialog vertical-align-center">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                            <h4 class="modal-title" id="modal-action-Label">
                                Attachments
                            </h4>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="existing-file-picker">
                                        @foreach (var attachment in Model.Attachments.Unique())
                                        {
                                            if (attachment.IsImage)
                                            {
                                                <div class="pickable" onclick='$(this).toggleClass("picked");'>
                                                    <i class="fa fa-check tick"></i>
                                                    <img src="@Html.Raw(attachment.GetUrl(100))" storageguid="@attachment.StorageGuid" />
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="pickable" onclick='$(this).toggleClass("picked");'>
                                                    <i class="fa fa-check tick"></i>
                                                    <img src="~/Content/img/icon-pdf.png" storageguid="@attachment.StorageGuid" />
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" id="selectPhotosBtn" data-dismiss="modal">Select Photos</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <header id="section-header" class="header-admin with-image-background" role="banner">
        <div class="header-content">
            <div class="main-header">
                <div class="container">

                    <div class="row row-no-gutter">
                        <div class="col-sm-3">
                            <div class="box-title">
                                <a type="button" data-toggle="modal" data-target="#modal-current-conversation" class="pull-right btn btn-links visible-xs">
                                    <i class="fa fa-phone" aria-hidden="true"></i>
                                </a>
                                <a href="~/" class="pull-left btn btn-back">
                                    <i class="fa fa-chevron-left" aria-hidden="true"></i>
                                </a>
                                <a type="button" data-toggle="modal" data-target="#modal-other-conversation" class="pull-right btn btn-conversation visible-xs">
                                    <i class="fa fa-comments" aria-hidden="true"></i>
                                    <span class="badge">@Model.Workflow.Conversations.Where(c => c != Model.Conversation).Count()</span>
                                </a>
                                <div class="box-enquiry inner-content">
                                    <em class="ellipsis"><span class="icon @Html.IconForDescribable(Model.Workflow as IDescribable)"></span>@Model.Workflow.Description(Html.LoggedInUser())</em>
                                    <strong class="ellipsis hidden-xxl hidden-xl hidden-lg hidden-md hidden-sm">@string.Join(", ", Model.Conversation.Users.Where(u => u != Html.LoggedInUser()).Select(u => u.Person.Name + " (" + u.RoleType + ")"))</strong>
                                    <strong class="ellipsis hidden-xs hidden-xxs">@Model.Workflow.ParentDescription(Html.LoggedInUser())</strong>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                        </div>

                        <div class="col-sm-9">
                            <div class="title-messagebox hidden-xs">
                                <div class="pull-right">

                                    @if (Model.Workflow.Actions().WithAccess(Html.LoggedInUser(), ViewContext.DbContext()).Count() > 3 || Html.LoggedInUser().MeetsAuthLevel(Realtair.Framework.Core.Entities.UserRoleType.Admin))
                                    {
                                        <a href="#" type="button" data-toggle="modal" data-target="#modal-action" class="btn btn-default btn-more pull-right">
                                            see all
                                            <i class="fa fa-plus" aria-hidden="true"></i>
                                        </a>
                                    }

                                    @foreach (var action in Model.Workflow.Actions().WithAccess(Html.LoggedInUser(), ViewContext.DbContext()).Take(3).Reverse())
                                    {
                                        <form class="pull-right inline" action="@action.GetUrl(Url)" method="@(action.Fields.Count() >= 1 ? "GET" : "POST")">
                                            <input name="ReturnUrl" type="hidden" value="@Request.Url.AbsolutePath" />
                                            <button class="btn btn-default pull-right" type="submit">@action.Description(Html.LoggedInUser())</button>
                                        </form>
                                    }
                                </div>
                                <div class="clearfix visible-xs"></div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </header>

    <div class="clearfix"></div>

    <main role="main" id="main">
        <aside>
            <div class="container">
                <div class="row row-no-gutter">
                    <div class="col-sm-3 sidebox">
                        <div class="panel panel-default panel-conversation hidden-xs">
                            <div class="panel-heading">
                                <i class="fa fa-comments" aria-hidden="true"></i> Current conversation
                            </div>

                            <div class="list-group">
                                @foreach (var user in Model.Conversation.Users.Where(u => u != Html.LoggedInUser()))
                                {
                                    <div href="#" class="list-group-item">
                                        <span class="img-circle pull-left hidden-sm hidden-md">@user.Person.Initials</span>
                                        @if (!string.IsNullOrEmpty(user.Person.MobileNo))
                                        {
                                            <a href="tel:@user.Person.MobileNo" class="pull-right">@user.Person.MobileNo</a>
                                        }
                                        <span class="inner-content">
                                            <strong>&nbsp; @user.Person.Name</strong>
                                            <span href="#" class="brand-provider ellipsis">&nbsp; @user.RoleType</span>
                                        </span>
                                        <div class="clearfix"></div>
                                    </div>
                                }
                            </div>
                            @if (otherConversationCount > 0)
                            {
                                <div class="other-conversartion">
                                    <div class="panel-heading">
                                        Other conversations (@Model.Conversations.Where(c => c != Model.Conversation).Count())
                                    </div>

                                    <div class="list-group">
                                        @foreach (var conversation in Model.Conversations.Where(c => c != Model.Conversation))
                                        {
                                            <a href="@conversation.GetUrl(Model.Workflow, Url)" class="list-group-item ellipsis">
                                                <i class="fa fa-comments pull-left" aria-hidden="true"></i>
                                                @{
                                                    var notificationCount = conversation.ActiveNotifications(Html.LoggedInUser(), Model.Workflow).Count(a => a is MessageNotification || (a is EventNotification));
                                                    if (notificationCount > 0)
                                                    {
                                                        <span class="badge pull-right">@notificationCount</span>
                                                    }
                                                }
                                                @string.Join(", ", conversation.Users.Where(u => u != Html.LoggedInUser()).Select(u => u.Person.Name + " (" + u.RoleType + ")"))
                                                <div class="clearfix"></div>
                                            </a>
                                                    }
                                    </div>
                                </div>

                                                    }
                            @if (Model.ExternalConversations.Count > 0)
                            {
                                <div class="other-conversartion">
                                    <div class="panel-heading">
                                        External conversations (@Model.ExternalConversations.Where(c => c != Model.Conversation).Count())
                                    </div>

                                    <div class="list-group">
                                        @foreach (var conversation in Model.ExternalConversations)
                                        {
                                            if (conversation != Model.Conversation)
                                            {
                                                <a href="@conversation.GetUrl(Model.Workflow, Url)" class="list-group-item ellipsis">
                                                    <i class="fa fa-comments pull-left" aria-hidden="true"></i>
                                                    <span class="badge pull-right">@conversation.ActiveNotifications(Html.LoggedInUser()).Count(a => a is MessageNotification || (a is EventNotification))</span>
                                                    @string.Join(", ", conversation.Users.Where(u => u != Html.LoggedInUser()).Select(u => u.Person.Name + " (" + u.RoleType + ")")))
                                                    <div class="clearfix"></div>
                                                </a>
                                            }
                                        }
                                    </div>
                                </div>
                            }

                            @if (Model.RelatedEnquiries.Count() > 0)
                            {
                                <div class="panel-heading">
                                    <i class="icon pull-left icon-hero" aria-hidden="true"></i> Enquiries
                                </div>

                                <div class="list-group">

                                    @foreach (var enquiry in Model.RelatedEnquiries.ToList())
                                    {
                                        <div href="#" class="list-group-item">
                                            <span class="inner-content">
                                                <a href="@Model.Conversation.GetUrl(enquiry, Url)">
                                                    <strong>&nbsp; @enquiry.Description(Html.LoggedInUser())</strong>
                                                    <span href="#" class="brand-provider ellipsis">&nbsp; @(enquiry.IsClosed ? "(Closed)" : "")</span>
                                                </a>
                                            </span>
                                            <div class="clearfix"></div>
                                        </div>
                                    }

                                </div>
                            }

                            @if (Model.RelatedTasks.Count() > 0)
                            {
                                <div class="panel-heading">
                                    <i class="icon pull-left icon-hero" aria-hidden="true"></i> Pending Tasks
                                </div>

                                <div class="list-group">

                                    @foreach (var task in Model.RelatedTasks.ToList())
                                    {
                                        <div href="#" class="list-group-item">
                                            <span class="inner-content">
                                                <a href="@task.GetDetailsUrl(Html.LoggedInUser(), Url)">
                                                    <strong>&nbsp; @task.Heading</strong>
                                                    <span href="#" class="brand-provider ellipsis">&nbsp; @task.Record.Enquiry.Description(Html.LoggedInUser())</span>
                                                </a>
                                            </span>
                                            <div class="clearfix"></div>
                                        </div>
                                    }

                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </aside>
        <div class="container">
            <div class="panel panel-default panel-hero">
                <div class="row row-no-gutter">
                    <div class="col-sm-9 col-sm-offset-3 messagebox">

                        @Html.Partial("Timeline", Model.Timeline)

                    </div>
                </div>
            </div>
        </div>

        <div class="sendbox">
            <form class="form-inline" id="send-message-form">
                <div class="container">
                    <div class="row row-no-gutter">
                        <div class="col-sm-9 col-sm-offset-3 part-top">
                            <script src="~/Scripts/fileupload.js"></script>
                            <script src="~/Scripts/load-image.min.js"></script>
                            <div class="bar-actions visible-xs">
                                <div class="pull-right">
                                    <a type="button" data-toggle="modal" data-target="#modal-action" class="btn btn-sm btn-default btn-fixed pull-right">
                                        see more
                                        <i class="fa fa-plus" aria-hidden="true"></i>
                                    </a>
                                    <div class="inner-content ellipsis">
                                        @foreach (var action in Model.Workflow.Actions().WithAccess(Html.LoggedInUser(), ViewContext.DbContext()))
                                        {
                                            <form class="inline" action="@action.GetUrl(Url)" method="@(action.Fields.Count() >= 1 ? "GET" : "POST")">
                                                <input name="ReturnUrl" type="hidden" value="@Request.Url.AbsolutePath" />
                                                <button class="btn btn-sm btn-primary" type="submit">@action.Description(Html.LoggedInUser())</button>
                                            </form>
                                        }
                                    </div>
                                </div>
                            </div>

                            <div id="file-attachment" class="file-attachment" style="display: none">
                                <div class="file-attachment-thumbnails ellipsis"></div>
                            </div>

                            <div class="newmessage">
                                <div class="pull-left">
                                    <label class="attachment-upload pull-left">
                                        <input name="attachments" id="attachments" class="hidden-upload pull-right" accept="text/csv,image/jpeg,image/png,application/pdf" multiple="" capture="camera" type="file">
                                        <a class="btn btn-icon" href="#" title="#">
                                            <i class="icon icon-PaperClip"></i>
                                        </a>
                                    </label>
                                    <label class="attachment-upload pull-left hidden-xs">
                                        <a class="btn btn-icon" href="#" data-toggle="modal" data-target="#modal-attachments" title="#">
                                            <i class="icon icon-FileBox"></i>
                                        </a>
                                    </label>
                                    <div class="clearfix"></div>
                                </div>

                                <button type="submit" class="btn btn-default pull-right">
                                    Send <span class="icon icon-Plaine"></span>
                                </button>

                                <div class="inner-content">
                                    <textarea autocomplete="off" class="form-control" name="messageText" placeholder="send message..."></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            <div class="part-bottom hidden-xs with-image-background"></div>
        </div>
    </main>

    <!-- Root element of PhotoSwipe. Must have class pswp. -->
    <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
        <!-- Background of PhotoSwipe.
             It's a separate element as animating opacity is faster than rgba(). -->
        <div class="pswp__bg"></div>
        <!-- Slides wrapper with overflow:hidden. -->
        <div class="pswp__scroll-wrap">
            <!-- Container that holds slides.
                PhotoSwipe keeps only 3 of them in the DOM to save memory.
                Don't modify these 3 pswp__item elements, data is added later on. -->
            <div class="pswp__container">
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
            </div>
            <!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->
            <div class="pswp__ui pswp__ui--hidden">
                <div class="pswp__top-bar">
                    <!--  Controls are self-explanatory. Order can be changed. -->
                    <div class="pswp__counter"></div>
                    <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                    <button class="pswp__button pswp__button--share" title="Share"></button>
                    <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                    <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>
                    <!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR -->
                    <!-- element will get class pswp__preloader--active when preloader is running -->
                    <div class="pswp__preloader">
                        <div class="pswp__preloader__icn">
                            <div class="pswp__preloader__cut">
                                <div class="pswp__preloader__donut"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                    <div class="pswp__share-tooltip"></div>
                </div>
                <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)"></button>
                <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)"></button>
                <div class="pswp__caption">
                    <div class="pswp__caption__center"></div>
                </div>
            </div>
        </div>
    </div>
    <script src="~/Scripts/jquery.easing.min.js"></script>
    <script src="~/Scripts/photoswipe.min.js"></script>
    <script src="~/Scripts/photoswipe-ui-default.min.js"></script>

    <script>
        var tempSentMessageId = 0;
        var pollTime = 1000 * 10;

        $(function () {
            $(document).scrollTop($(document).height());
            setTimeout(doPoll, pollTime);

            $('#send-message-form').submit(function (e) {
                e.preventDefault();
                sendMessage();
            });

            $('.icon-PaperClip').parent().click(function () {
                $('#attachments').trigger('click');
                $('.file-attachment').show();
            });

            //$('.file-attachment').hide();

            $('.close-file').click(function () {
                if ($("#send-message-form .file-attachment .preview").length == 0) $('.file-attachment').hide();
            });

            $('#selectPhotosBtn').click(function () {
                $('#modal-attachments').find('.picked').each(function () {
                    var image = $(this).find('img').attr('src');
                    var storageguid = $(this).find('img').attr('storageguid');
                    $('.file-attachment-thumbnails').append($('<div class="existing-preview" storageguid="' + storageguid + '" style="background-image: url(' + image + ')"><a class="close-file"><i class="fa fa-times"></i></a><input type="hidden" name="existingAttachments" value="' + storageguid + '"></div>'));
                    $('.file-attachment, .file-attachment-thumbnails').show();
                    $(this).toggleClass("picked");

                    $('.existing-preview').each(function () {
                        var $this = $(this);
                        $(this).find('a.close-file').click(function () { $this.remove(); });
                    });
                });
            });

            /* Auto popup gallery */
            var url = window.location.href;
            var hash = url.substring(url.indexOf('#') + 1);
            var queries = hash.split("&");
            for (var i = 0; i < queries.length; i++) {
                if (queries[i].includes("pid")) {
                    var pid = queries[i].split("=")[1];
                    $('#' + pid).trigger('click');
                }
            }

            var textarea = document.querySelector('textarea[name=messageText]');
            textarea.addEventListener('keydown', autosize);

            function autosize() {
                var el = this;
                setTimeout(function () {
                    el.style.cssText = 'height:auto; padding:0';
                    // for box-sizing other than "content-box" use:
                    // el.style.cssText = '-moz-box-sizing:content-box';
                    el.style.cssText = 'height:' + el.scrollHeight + 'px';
                }, 0);
            }
        });

        function sendMessage() {
            tempSentMessageId++;

            var messageId = "sent-" + tempSentMessageId;
            var messageText = $('#send-message-form textarea[name=messageText]').val();
            var attachments = $("#send-message-form .file-attachment .preview");
            var existingAttachments = $("#send-message-form .file-attachment .existing-preview");
            var formToSubmit = $("#send-message-form").serialize();

            $('textarea[name=messageText]').val('');
            $('textarea[name=messageText]').css('height', '60px');
            $('.file-attachment-thumbnails').empty().hide();
            $('#file-attachment').hide();

            if (attachments.length > 0 || jQuery.trim(messageText).length > 0 || existingAttachments.length > 0) {
                var message = $(
                    '<div id="' + messageId + '"class="row row-no-gutter answer message-provider sending">' +
                        '<div class="col-md-5 col-md-push-7">' +
                        '<figure>' +
                            '<span class="img-circle">@(Html.LoggedInUser().Person.FirstName[0])@(Html.LoggedInUser().Person.LastName[0])</span>' +
                        '</figure>' +
                        '<div class="inner-content">' +
                            '<time><span>Now<span></span></span></time>' +
                            '<div class="clearfix"></div>' +
                            '<div class="panel panel-default">' +
                                '<div class="panel-body">' +
                                     messageText +
                                    '</div>' +
                                '</div>' +
                            '</div>' +
                        '</div>' +
                        '<div class="col-md-2"><div class="circle-timeline"></div></div>' +
                    '</div>');

                if (attachments.length > 0 || existingAttachments.length > 0) {
                    var attachmentHtml = '<div class="file-attachment text-center">';

                    for (var i = 0; i < attachments.length; i++) {
                        attachmentHtml += '<div class="spin-icon-box"><span class="icon icon-Restart spinner"></span></div>';
                    }

                    for (var i = 0; i < existingAttachments.length; i++) {
                        attachmentHtml += '<div class="spin-icon-box"><span class="icon icon-Restart spinner"></span></div>';
                    }

                    attachmentHtml += "</div>";
                    message.find(".panel").append('<div class="panel-footer"></div>').find(".panel-footer").append(attachmentHtml);
                }

                var baseMainHeight = $(document).height();
                $(".messagebox").append(message);
                $('html,body').animate({ scrollTop: $(document).scrollTop() + $(document).height() - baseMainHeight }, "fast");

                $.ajax({
                    url: '/enquiry/@Model.Workflow.Id/chat/@Model.Conversation.Id/send-message',
                    type: "POST",
                    data: formToSubmit,
                    enctype: 'multipart/form-data',
                    success: function (insertedId) {
                        doPoll();
                        $("#" + messageId).remove();
                    },
                    error: function (data) {
                        window.location.href = "/";
                    }
                });

            }
        }

        function doPoll() {
            $.ajax({
                url: '/enquiry/@Model.Workflow.Id/chat/@Model.Conversation.Id/get-updated-timeline?isActive=' + true,
                type: 'GET',
                success: function (data) {

                    var baseMainHeight = $(document).height();

                    $('.messagebox').children().not('.sending').remove();
                    $(".messagebox").prepend(data);

                    $('html,body').animate({
                        scrollTop: $(document).scrollTop() + $(document).height() - baseMainHeight
                    }, "fast");

                    setTimeout(doPoll, pollTime);
                },
                error: function (data) {
                    window.location.href = "/";
                }
            });
        }
    </script>

</body>