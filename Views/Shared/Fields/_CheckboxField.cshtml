@model Realtair.Framework.Core.Actions.Field
@{
    var attribute = Model.FieldAttribute as Realtair.Framework.Core.Actions.FieldAttributes.CheckboxFieldAttribute;
    var propertyname = Model.PropertyInfo.Name;
    var value = Model.Value;
    var trueCheckboxName = $"{propertyname}-true";
    var falseCheckboxName = $"{propertyname}-false";
}

<div class="form-group">
    @if (Model.Label.Count() > 40)
    {
        <div class="col-sm-4 control-label">
            <label class="control-label">@Model.Label</label>
        </div>

        <div class="col-sm-6">
            <div class="checkbox">
                <p>
                    <label>
                        <input id="@trueCheckboxName" type="checkbox" name="@propertyname" value="true" @(Convert.ToBoolean(value) ? "checked='checked'" : "")>
                        <span class="checkbox-material">
                            <span class="check">
                            </span>
                        </span>
                        @attribute.LabelForTrue
                    </label>
                </p>
            </div>
            &nbsp;
            <div class="checkbox">
                <p>
                    <label>
                        <input id="@falseCheckboxName" type="checkbox" name="@propertyname" value="false" @(!Convert.ToBoolean(value) ? "checked='checked'" : "")>
                        <span class="checkbox-material">
                            <span class="check">
                            </span>
                        </span>
                        @attribute.LabelForFalse
                    </label>
                </p>
            </div>
        </div>
    }
    else
    {
        <div class="col-sm-3 control-label">
            <label class="control-label">@Model.Label</label>
        </div>
        <div class="col-sm-9">
            <div class="checkbox">
                <p>
                    <label>
                        <input id="@trueCheckboxName" type="checkbox" name="@propertyname" value="true" @(Convert.ToBoolean(value) ? "checked='checked'" : "")>
                        <span class="checkbox-material">
                            <span class="check">
                            </span>
                        </span>
                        @attribute.LabelForTrue
                    </label>
                </p>
            </div>
            &nbsp;
            <div class="checkbox">
                <p>
                    <label>
                        <input id="@falseCheckboxName" type="checkbox" name="@propertyname" value="false" @(!Convert.ToBoolean(value) ? "checked='checked'" : "")>
                        <span class="checkbox-material">
                            <span class="check">
                            </span>
                        </span>
                        @attribute.LabelForFalse
                    </label>
                </p>
            </div>
        </div>
    }


</div>

<script>
    (function () {
        var trueCheckbox = $('input#@trueCheckboxName');
        var falseCheckbox = $('input#@falseCheckboxName');

        trueCheckbox.change(function () {
            falseCheckbox.prop('checked', !$(this).prop('checked'));
        });

        falseCheckbox.change(function () {
            trueCheckbox.prop('checked', !$(this).prop('checked'));
        });
    })();
</script>