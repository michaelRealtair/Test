#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    
    #line 8 "..\..\Views\Actions\Action.cshtml"
    using System;
    
    #line default
    #line hidden
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 4 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Core.Actions;
    
    #line default
    #line hidden
    
    #line 2 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Core.Entities;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Core.Interfaces;
    
    #line default
    #line hidden
    
    #line 5 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Core.Web.Utilities;
    
    #line default
    #line hidden
    
    #line 7 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Enquiries.Entities;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Enquiries.Interfaces;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Actions/Action.cshtml")]
    public partial class _Views_Actions_Action_cshtml : System.Web.Mvc.WebViewPage<Realtair.Framework.Core.Web.Controllers.ActionsController.ActionViewModel>
    {
        public _Views_Actions_Action_cshtml()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n");

            
            #line 10 "..\..\Views\Actions\Action.cshtml"
  
    var detailsTemplate = "-";
    var cancelActionUrl = "";

    if (Request.QueryString["ReturnUrl"] != null)
    {
        cancelActionUrl = Request.QueryString["ReturnUrl"].ToString();
    }

    if (Model.Action.This != null)
    {
        detailsTemplate = $"{Model.Action.This.ActualType().Name}/{Model.Action.GetType().Name}";
    }

    if (Html.ViewExists(detailsTemplate))
    {
        Layout = null;
        Html.RenderPartial(detailsTemplate, Model.Action);
    }
    else
    {
        IEnumerable<Field> shown;
        IEnumerable<Field> shownWithFieldSets;
        IEnumerable<Field> hidden;

        TempData["ShowSubmit"] = true;

        if (Model.IsMultiPage)
        {
            shown = Model.FieldsForPage;
            shownWithFieldSets = Model.FieldsForPage.Where(f => f.FieldSetAttribute != null).ToList();
            hidden = Model.HiddenFieldsForPage;
        }
        else
        {
            shown = Model.Fields;
            shownWithFieldSets = Model.Fields.Where(f => f.FieldSetAttribute != null).ToList();
            hidden = null;
        }




            
            #line default
            #line hidden
WriteLiteral("        <div");

WriteLiteral(" class=\"content bg-grey-lt\"");

WriteLiteral(">\r\n\r\n");

WriteLiteral("            ");

            
            #line 54 "..\..\Views\Actions\Action.cshtml"
       Write(Html.Partial("FlowerHorn/MobileNavigation"));

            
            #line default
            #line hidden
WriteLiteral("\r\n            <div");

WriteLiteral(" id=\"page-wrapper\"");

WriteLiteral(" class=\"padding-sides-sm pad-form-mob\"");

WriteLiteral(">\r\n\r\n                <div");

WriteLiteral(" id=\"loader-wrapper\"");

WriteLiteral(" class=\"hide-bg\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" id=\"loader\"");

WriteLiteral("></div>\r\n                </div>\r\n\r\n                <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"col-sm-10 col-sm-offset-1\"");

WriteLiteral(">\r\n                        ");

WriteLiteral("\r\n                        <h2>\r\n");

            
            #line 65 "..\..\Views\Actions\Action.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 65 "..\..\Views\Actions\Action.cshtml"
                             if (Model.IsMultiPage)
                            {
                                
            
            #line default
            #line hidden
            
            #line 67 "..\..\Views\Actions\Action.cshtml"
                           Write(Model.Page.Name.ToUpper());

            
            #line default
            #line hidden
            
            #line 67 "..\..\Views\Actions\Action.cshtml"
                                                          
                            }
                            else
                            {
                                
            
            #line default
            #line hidden
            
            #line 71 "..\..\Views\Actions\Action.cshtml"
                           Write(Model.Action.Description(Html.LoggedInUser()).ToUpper());

            
            #line default
            #line hidden
            
            #line 71 "..\..\Views\Actions\Action.cshtml"
                                                                                        
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </h2>\r\n\r\n");

            
            #line 75 "..\..\Views\Actions\Action.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 75 "..\..\Views\Actions\Action.cshtml"
                          
                            var parentEnquiry = (Model.Action.This as IHasParentEnquiry)?.ParentEnquiry;
                            if (parentEnquiry != null)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <h3");

WriteLiteral(" class=\"no-margin-tb\"");

WriteLiteral(">\r\n                                    <i");

WriteLiteral(" class=\"fa fa-home\"");

WriteLiteral("></i> ");

            
            #line 80 "..\..\Views\Actions\Action.cshtml"
                                                           Write(parentEnquiry.Description(Html.LoggedInUser()));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </h3>\r\n");

WriteLiteral("                                <br />\r\n");

            
            #line 83 "..\..\Views\Actions\Action.cshtml"
                            }
                        
            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n                        ");

WriteLiteral("\r\n");

            
            #line 87 "..\..\Views\Actions\Action.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 87 "..\..\Views\Actions\Action.cshtml"
                         if (Model.Action.HasValidated && !Model.Action.IsValid)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <div");

WriteLiteral(" class=\"col-md-12\"");

WriteLiteral(" style=\"padding: 0;\"");

WriteLiteral(">\r\n");

            
            #line 90 "..\..\Views\Actions\Action.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 90 "..\..\Views\Actions\Action.cshtml"
                                 foreach (var error in Model.Action.Errors.Where(e => e.MemberNames.Count() == 0))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\"alert alert-danger\"");

WriteLiteral(">");

            
            #line 92 "..\..\Views\Actions\Action.cshtml"
                                                               Write(error.ErrorMessage);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");

            
            #line 93 "..\..\Views\Actions\Action.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n");

            
            #line 95 "..\..\Views\Actions\Action.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                            ");

WriteLiteral("\r\n                            <div");

WriteLiteral(" class=\"col-sm-12\"");

WriteLiteral(">\r\n                                ");

WriteLiteral("\r\n                                <form");

WriteLiteral(" class=\"form-horizontal panel panel-body form-padding\"");

WriteLiteral(" id=\"main-form\"");

WriteLiteral(" method=\"post\"");

WriteLiteral(">\r\n");

            
            #line 135 "..\..\Views\Actions\Action.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 135 "..\..\Views\Actions\Action.cshtml"
                                     foreach (var field in shown)
                                    {
                                        if (field.FieldSetAttribute != null)
                                        {
                                            var fieldSetItems = shownWithFieldSets.Where(s => s.FieldSetAttribute.Legend == field.FieldSetAttribute.Legend).ToList();
                                            if (fieldSetItems.Any())
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <fieldset");

WriteLiteral(" class=\"margin-t-md\"");

WriteLiteral(">\r\n                                                    <legend>");

            
            #line 143 "..\..\Views\Actions\Action.cshtml"
                                                       Write(field.FieldSetAttribute.Legend);

            
            #line default
            #line hidden
WriteLiteral("</legend>\r\n                                                    <div");

WriteLiteral(" class=\"p-l-30\"");

WriteLiteral(">\r\n");

            
            #line 145 "..\..\Views\Actions\Action.cshtml"
                                                        
            
            #line default
            #line hidden
            
            #line 145 "..\..\Views\Actions\Action.cshtml"
                                                         foreach (var item in fieldSetItems)
                                                        {
                                                            var fieldWithReturnType = $"Fields/_{item.PropertyType.Name}_{item.FieldAttribute.GetType().Name.Substring(0, item.FieldAttribute.GetType().Name.Length - "Attribute".Length)}";
                                                            var fieldWithoutReturnType = $"Fields/_{item.FieldAttribute.GetType().Name.Substring(0, item.FieldAttribute.GetType().Name.Length - "Attribute".Length)}";
                                                            var fieldThatWorksForBoth = $"Fields/_{item.PropertyType.Name}_Field";

                                                            if (Html.ViewExists(fieldWithReturnType))
                                                            {
                                                                Html.RenderPartial(fieldWithReturnType, item);
                                                            }
                                                            else if (Html.ViewExists(fieldWithoutReturnType))
                                                            {
                                                                Html.RenderPartial(fieldWithoutReturnType, item);
                                                            }
                                                            else if (Html.ViewExists(fieldThatWorksForBoth))
                                                            {
                                                                Html.RenderPartial(fieldThatWorksForBoth, item);
                                                            }
                                                            else
                                                            {


            
            #line default
            #line hidden
WriteLiteral("                                                                <p> Cannot render" +
" field view, looked for both ");

            
            #line 166 "..\..\Views\Actions\Action.cshtml"
                                                                                                         Write(fieldWithReturnType);

            
            #line default
            #line hidden
WriteLiteral(" and ");

            
            #line 166 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                  Write(fieldWithoutReturnType);

            
            #line default
            #line hidden
WriteLiteral(" </p>\r\n");

            
            #line 167 "..\..\Views\Actions\Action.cshtml"

                                                            }
                                                        }

            
            #line default
            #line hidden
WriteLiteral("                                                    </div>\r\n                     " +
"                           </fieldset>");

            
            #line 171 "..\..\Views\Actions\Action.cshtml"
                                                           shownWithFieldSets = shownWithFieldSets.Except(fieldSetItems).ToList();
                                            }
                                        }
                                        else
                                        {
                                            var fieldWithReturnType = $"Fields/_{field.PropertyType.Name}_{field.FieldAttribute.GetType().Name.Substring(0, field.FieldAttribute.GetType().Name.Length - "Attribute".Length)}";
                                            var fieldWithoutReturnType = $"Fields/_{field.FieldAttribute.GetType().Name.Substring(0, field.FieldAttribute.GetType().Name.Length - "Attribute".Length)}";
                                            var fieldThatWorksForBoth = $"Fields/_{field.PropertyType.Name}_Field";

                                            if (Html.ViewExists(fieldWithReturnType))
                                            {
                                                Html.RenderPartial(fieldWithReturnType, field);
                                            }
                                            else if (Html.ViewExists(fieldWithoutReturnType))
                                            {
                                                Html.RenderPartial(fieldWithoutReturnType, field);
                                            }
                                            else if (Html.ViewExists(fieldThatWorksForBoth))
                                            {
                                                Html.RenderPartial(fieldThatWorksForBoth, field);
                                            }
                                            else
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <p>Cannot render field view, look" +
"ed for both ");

            
            #line 194 "..\..\Views\Actions\Action.cshtml"
                                                                                        Write(fieldWithReturnType);

            
            #line default
            #line hidden
WriteLiteral(" and ");

            
            #line 194 "..\..\Views\Actions\Action.cshtml"
                                                                                                                 Write(fieldWithoutReturnType);

            
            #line default
            #line hidden
WriteLiteral("</p>\r\n");

            
            #line 195 "..\..\Views\Actions\Action.cshtml"
                                            }
                                        }
                                    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 199 "..\..\Views\Actions\Action.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 199 "..\..\Views\Actions\Action.cshtml"
                                     if (hidden != null)
                                    {
                                        foreach (var field in hidden)
                                        {
                                            if (field.FieldAttribute is Realtair.Framework.Core.Actions.FieldAttributes.BulkFileUploadFieldAttribute && field.Value is IEnumerable<Attachment>)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 11953), Tuple.Create("\"", 11977)
            
            #line 205 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 11960), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 11960), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 11978), Tuple.Create("\"", 12064)
, Tuple.Create(Tuple.Create("", 11986), Tuple.Create("[", 11986), true)
, Tuple.Create(Tuple.Create("", 11987), Tuple.Create<System.Object, System.Int32>(new System.Web.WebPages.HelperResult(__razor_attribute_value_writer => {

            
            #line 205 "..\..\Views\Actions\Action.cshtml"
                                                                                                       foreach (var a in field.Value as IEnumerable<Attachment>) { 
            
            #line default
            #line hidden
            
            #line 205 "..\..\Views\Actions\Action.cshtml"
                                                                                                                             WriteTo(__razor_attribute_value_writer, a.Id + ",");

            
            #line default
            #line hidden
            
            #line 205 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                                 }
            
            #line default
            #line hidden
}), 11987), false)
, Tuple.Create(Tuple.Create("", 12063), Tuple.Create("]", 12063), true)
);

WriteLiteral(" />\r\n");

            
            #line 206 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is IList<Attachment>)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 12320), Tuple.Create("\"", 12344)
            
            #line 209 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 12327), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 12327), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 12345), Tuple.Create("\"", 12436)
, Tuple.Create(Tuple.Create("", 12353), Tuple.Create("[", 12353), true)
            
            #line 209 "..\..\Views\Actions\Action.cshtml"
                      , Tuple.Create(Tuple.Create("", 12354), Tuple.Create<System.Object, System.Int32>(string.Join(",",((IList<Attachment>)field.Value).Select(f => f.Id.ToString()))
            
            #line default
            #line hidden
, 12354), false)
, Tuple.Create(Tuple.Create("", 12435), Tuple.Create("]", 12435), true)
);

WriteLiteral(" />\r\n");

            
            #line 210 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is ICustomViewModel)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 12691), Tuple.Create("\"", 12715)
            
            #line 213 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 12698), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 12698), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 12716), Tuple.Create("\"", 12772)
            
            #line 213 "..\..\Views\Actions\Action.cshtml"
                     , Tuple.Create(Tuple.Create("", 12724), Tuple.Create<System.Object, System.Int32>((field.Value as ICustomViewModel).Serialize()
            
            #line default
            #line hidden
, 12724), false)
);

WriteLiteral(" />\r\n");

            
            #line 214 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is IEnumerable<ICustomViewModel>)
                                            {
                                                if ((field.Value as IEnumerable<ICustomViewModel>).Count() > 0)
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 13208), Tuple.Create("\"", 13232)
            
            #line 219 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 13215), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 13215), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 13233), Tuple.Create("\"", 13337)
, Tuple.Create(Tuple.Create("", 13241), Tuple.Create("[", 13241), true)
            
            #line 219 "..\..\Views\Actions\Action.cshtml"
                          , Tuple.Create(Tuple.Create("", 13242), Tuple.Create<System.Object, System.Int32>(string.Join(",", (field.Value as IEnumerable<ICustomViewModel>).Select(s => s.Serialize()))
            
            #line default
            #line hidden
, 13242), false)
, Tuple.Create(Tuple.Create("", 13336), Tuple.Create("]", 13336), true)
);

WriteLiteral(" />\r\n");

            
            #line 220 "..\..\Views\Actions\Action.cshtml"
                                                }
                                            }
                                            else if (field.Value is IEnumerable<Entity>)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 13646), Tuple.Create("\"", 13670)
            
            #line 224 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 13653), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 13653), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 13671), Tuple.Create("\"", 13767)
, Tuple.Create(Tuple.Create("", 13679), Tuple.Create("[", 13679), true)
            
            #line 224 "..\..\Views\Actions\Action.cshtml"
                      , Tuple.Create(Tuple.Create("", 13680), Tuple.Create<System.Object, System.Int32>(string.Join(",", (field.Value as IEnumerable<Entity>).Select(e => e.Id.ToString()))
            
            #line default
            #line hidden
, 13680), false)
, Tuple.Create(Tuple.Create("", 13766), Tuple.Create("]", 13766), true)
);

WriteLiteral(" />\r\n");

            
            #line 225 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is Entity)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 14012), Tuple.Create("\"", 14036)
            
            #line 228 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 14019), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 14019), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 14037), Tuple.Create("\"", 14074)
            
            #line 228 "..\..\Views\Actions\Action.cshtml"
                     , Tuple.Create(Tuple.Create("", 14045), Tuple.Create<System.Object, System.Int32>((field.Value as Entity).Id
            
            #line default
            #line hidden
, 14045), false)
);

WriteLiteral(" />\r\n");

            
            #line 229 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.FieldAttribute is Realtair.Framework.Core.Actions.FieldAttributes.WidgetFieldAttribute)
                                            {

                                            }
                                            else if (field.Value is bool?[])
                                            {
                                                var values = "";
                                                foreach (var v in (field.Value as IEnumerable<bool?>).ToList())
                                                {
                                                    if (v != null) { values += v + ","; }
                                                    else { values += "null,"; }

                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 15019), Tuple.Create("\"", 15043)
            
            #line 243 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 15026), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 15026), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 15044), Tuple.Create("\"", 15105)
, Tuple.Create(Tuple.Create("", 15052), Tuple.Create("[", 15052), true)
            
            #line 243 "..\..\Views\Actions\Action.cshtml"
                      , Tuple.Create(Tuple.Create("", 15053), Tuple.Create<System.Object, System.Int32>(values.Substring(0, values.Length - 1).ToLower()
            
            #line default
            #line hidden
, 15053), false)
, Tuple.Create(Tuple.Create("", 15104), Tuple.Create("]", 15104), true)
);

WriteLiteral(" />\r\n");

            
            #line 244 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is DateTime)
                                            {
                                                var date = (DateTime)field.Value;

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 15435), Tuple.Create("\"", 15459)
            
            #line 248 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 15442), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 15442), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 15460), Tuple.Create("\"", 15530)
, Tuple.Create(Tuple.Create("", 15468), Tuple.Create<System.Object, System.Int32>(new System.Web.WebPages.HelperResult(__razor_attribute_value_writer => {

            
            #line 248 "..\..\Views\Actions\Action.cshtml"
                                                                                                      if(date > DateTime.MinValue) { 
            
            #line default
            #line hidden
            
            #line 248 "..\..\Views\Actions\Action.cshtml"
                                                                                              WriteTo(__razor_attribute_value_writer, date.ToString("yyyy-MM-dd"));

            
            #line default
            #line hidden
            
            #line 248 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                  }
            
            #line default
            #line hidden
}), 15468), false)
);

WriteLiteral(" />\r\n");

            
            #line 249 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is bool)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 15773), Tuple.Create("\"", 15797)
            
            #line 252 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 15780), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 15780), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 15798), Tuple.Create("\"", 15829)
            
            #line 252 "..\..\Views\Actions\Action.cshtml"
                    , Tuple.Create(Tuple.Create("", 15806), Tuple.Create<System.Object, System.Int32>(field.Value.ToString()
            
            #line default
            #line hidden
, 15806), false)
);

WriteLiteral(" />\r\n");

            
            #line 253 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 16047), Tuple.Create("\"", 16071)
            
            #line 256 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 16054), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 16054), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 16072), Tuple.Create("\"", 16092)
            
            #line 256 "..\..\Views\Actions\Action.cshtml"
                    , Tuple.Create(Tuple.Create("", 16080), Tuple.Create<System.Object, System.Int32>(field.Value
            
            #line default
            #line hidden
, 16080), false)
);

WriteLiteral(" />\r\n");

            
            #line 257 "..\..\Views\Actions\Action.cshtml"
                                            }
                                        }


            
            #line default
            #line hidden
WriteLiteral("                                        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"submittedpagenames\"");

WriteAttribute("value", Tuple.Create(" value=\"", 16276), Tuple.Create("\"", 16353)
            
            #line 260 "..\..\Views\Actions\Action.cshtml"
             , Tuple.Create(Tuple.Create("", 16284), Tuple.Create<System.Object, System.Int32>(string.Join(",", Model.SubmittedPages.Select(p => p.GetType().Name))
            
            #line default
            #line hidden
, 16284), false)
);

WriteLiteral(" />\r\n");

WriteLiteral("                                        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"page\"");

WriteAttribute("value", Tuple.Create(" value=\"", 16431), Tuple.Create("\"", 16465)
            
            #line 261 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 16439), Tuple.Create<System.Object, System.Int32>(Model.Page.GetType().Name
            
            #line default
            #line hidden
, 16439), false)
);

WriteLiteral(" />\r\n");

            
            #line 262 "..\..\Views\Actions\Action.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" style=\"position: absolute; left: -9999px; width: 1px; height: 1px;\"");

WriteLiteral(" tabindex=\"-1\"");

WriteLiteral(" />\r\n                                </form>\r\n\r\n");

            
            #line 267 "..\..\Views\Actions\Action.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 267 "..\..\Views\Actions\Action.cshtml"
                                 if ((bool)TempData["ShowSubmit"] || Model.SubmittedPages.Count != 0)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\"form-group margin-tb-md\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"col-sm-12\"");

WriteLiteral(">\r\n                                            <ul");

WriteLiteral(" class=\"pull-right list-inline\"");

WriteLiteral(">\r\n");

            
            #line 272 "..\..\Views\Actions\Action.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 272 "..\..\Views\Actions\Action.cshtml"
                                                 if (Model.SubmittedPages.Count != 0)
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <li><a");

WriteLiteral(" href=\"javascript:void(0);\"");

WriteLiteral(" class=\"btn btn-task btn-form btn-trans-grey uppercase\"");

WriteLiteral(" onclick=\'$(\"#back-form\").submit();\'");

WriteLiteral(">BACK</a></li>\r\n");

            
            #line 275 "..\..\Views\Actions\Action.cshtml"
                                                }
                                                else
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <li><a");

WriteLiteral(" href=\"javascript:void(0);\"");

WriteLiteral(" class=\"btn btn-task btn-form btn-trans-red uppercase\"");

WriteLiteral(" onclick=\'$(\"#cancel-form\").submit();\'");

WriteLiteral(">CANCEL</a></li>\r\n");

            
            #line 279 "..\..\Views\Actions\Action.cshtml"
                                                }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 281 "..\..\Views\Actions\Action.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 281 "..\..\Views\Actions\Action.cshtml"
                                                 if ((bool)TempData["ShowSubmit"])
                                                {
                                                    if (!Model.IsMultiPage)
                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                        <li><a");

WriteLiteral(" href=\"javascript:void(0);\"");

WriteLiteral(" class=\"btn btn-task btn-form btn-trans-green uppercase\"");

WriteLiteral(" onclick=\'$(\"#main-form\").submit();\'");

WriteLiteral(">");

            
            #line 285 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                                 Write(Model.Action.SubmitValue);

            
            #line default
            #line hidden
WriteLiteral("</a></li>\r\n");

            
            #line 286 "..\..\Views\Actions\Action.cshtml"
                                                    }
                                                    else
                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                        <li><a");

WriteLiteral(" href=\"javascript:void(0);\"");

WriteLiteral(" class=\"btn btn-task btn-form btn-trans-grey uppercase\"");

WriteLiteral(" onclick=\'$(\"#main-form\").submit();\'");

WriteLiteral(">");

            
            #line 289 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                                Write(Model.Action.SubmitValue);

            
            #line default
            #line hidden
WriteLiteral("</a></li>\r\n");

            
            #line 290 "..\..\Views\Actions\Action.cshtml"
                                                    }
                                                }

            
            #line default
            #line hidden
WriteLiteral("                                            </ul>\r\n                              " +
"          </div>\r\n                                    </div>\r\n");

            
            #line 295 "..\..\Views\Actions\Action.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n                        </div>\r\n\r\n");

            
            #line 299 "..\..\Views\Actions\Action.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 299 "..\..\Views\Actions\Action.cshtml"
                         if (Model.IsMultiPage)
                        {
                            if (Model.SubmittedPages.Count != 0)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <form");

WriteLiteral(" method=\"post\"");

WriteLiteral(" id=\"back-form\"");

WriteLiteral(">\r\n");

            
            #line 304 "..\..\Views\Actions\Action.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 304 "..\..\Views\Actions\Action.cshtml"
                                     if (hidden != null)
                                    {
                                        foreach (var field in hidden)
                                        {
                                            if (field.FieldAttribute is Realtair.Framework.Core.Actions.FieldAttributes.BulkFileUploadFieldAttribute && field.Value is IEnumerable<Attachment>)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 19776), Tuple.Create("\"", 19800)
            
            #line 310 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 19783), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 19783), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 19801), Tuple.Create("\"", 19887)
, Tuple.Create(Tuple.Create("", 19809), Tuple.Create("[", 19809), true)
, Tuple.Create(Tuple.Create("", 19810), Tuple.Create<System.Object, System.Int32>(new System.Web.WebPages.HelperResult(__razor_attribute_value_writer => {

            
            #line 310 "..\..\Views\Actions\Action.cshtml"
                                                                                                       foreach (var a in field.Value as IEnumerable<Attachment>) { 
            
            #line default
            #line hidden
            
            #line 310 "..\..\Views\Actions\Action.cshtml"
                                                                                                                             WriteTo(__razor_attribute_value_writer, a.Id + ",");

            
            #line default
            #line hidden
            
            #line 310 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                                 }
            
            #line default
            #line hidden
}), 19810), false)
, Tuple.Create(Tuple.Create("", 19886), Tuple.Create("]", 19886), true)
);

WriteLiteral(" />\r\n");

            
            #line 311 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is IEnumerable<Attachment>)
                                            {
                                                foreach (var file in (IEnumerable<Attachment>)field.Value)
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 20312), Tuple.Create("\"", 20336)
            
            #line 316 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 20319), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 20319), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 20337), Tuple.Create("\"", 20355)
            
            #line 316 "..\..\Views\Actions\Action.cshtml"
                         , Tuple.Create(Tuple.Create("", 20345), Tuple.Create<System.Object, System.Int32>(file.Id
            
            #line default
            #line hidden
, 20345), false)
);

WriteLiteral(" />");

            
            #line 316 "..\..\Views\Actions\Action.cshtml"
                                                                                                                       }
                                            }
                                            else if (field.Value is ICustomViewModel)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 20611), Tuple.Create("\"", 20635)
            
            #line 320 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 20618), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 20618), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 20636), Tuple.Create("\"", 20692)
            
            #line 320 "..\..\Views\Actions\Action.cshtml"
                     , Tuple.Create(Tuple.Create("", 20644), Tuple.Create<System.Object, System.Int32>((field.Value as ICustomViewModel).Serialize()
            
            #line default
            #line hidden
, 20644), false)
);

WriteLiteral(" />\r\n");

            
            #line 321 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is IEnumerable<ICustomViewModel>)
                                            {
                                                if ((field.Value as IEnumerable<ICustomViewModel>).Count() > 0)
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 21128), Tuple.Create("\"", 21152)
            
            #line 326 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 21135), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 21135), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 21153), Tuple.Create("\"", 21257)
, Tuple.Create(Tuple.Create("", 21161), Tuple.Create("[", 21161), true)
            
            #line 326 "..\..\Views\Actions\Action.cshtml"
                          , Tuple.Create(Tuple.Create("", 21162), Tuple.Create<System.Object, System.Int32>(string.Join(",", (field.Value as IEnumerable<ICustomViewModel>).Select(s => s.Serialize()))
            
            #line default
            #line hidden
, 21162), false)
, Tuple.Create(Tuple.Create("", 21256), Tuple.Create("]", 21256), true)
);

WriteLiteral(" />");

            
            #line 326 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                                                             }
                                            }
                                            else if (field.Value is Entity)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 21503), Tuple.Create("\"", 21527)
            
            #line 330 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 21510), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 21510), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 21528), Tuple.Create("\"", 21565)
            
            #line 330 "..\..\Views\Actions\Action.cshtml"
                     , Tuple.Create(Tuple.Create("", 21536), Tuple.Create<System.Object, System.Int32>((field.Value as Entity).Id
            
            #line default
            #line hidden
, 21536), false)
);

WriteLiteral(" />\r\n");

            
            #line 331 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is IEnumerable<Entity>)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 21823), Tuple.Create("\"", 21847)
            
            #line 334 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 21830), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 21830), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 21848), Tuple.Create("\"", 21944)
, Tuple.Create(Tuple.Create("", 21856), Tuple.Create("[", 21856), true)
            
            #line 334 "..\..\Views\Actions\Action.cshtml"
                      , Tuple.Create(Tuple.Create("", 21857), Tuple.Create<System.Object, System.Int32>(string.Join(",", (field.Value as IEnumerable<Entity>).Select(e => e.Id.ToString()))
            
            #line default
            #line hidden
, 21857), false)
, Tuple.Create(Tuple.Create("", 21943), Tuple.Create("]", 21943), true)
);

WriteLiteral(" />\r\n");

            
            #line 335 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.FieldAttribute is Realtair.Framework.Core.Actions.FieldAttributes.WidgetFieldAttribute)
                                            {

                                            }
                                            else if (field.Value is bool?[])
                                            {
                                                var values = "";
                                                foreach (var v in (field.Value as IEnumerable<bool?>).ToList())
                                                {
                                                    if (v != null) { values += v + ","; }
                                                    else { values += "null,"; }

                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 22889), Tuple.Create("\"", 22913)
            
            #line 349 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 22896), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 22896), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 22914), Tuple.Create("\"", 22975)
, Tuple.Create(Tuple.Create("", 22922), Tuple.Create("[", 22922), true)
            
            #line 349 "..\..\Views\Actions\Action.cshtml"
                      , Tuple.Create(Tuple.Create("", 22923), Tuple.Create<System.Object, System.Int32>(values.Substring(0, values.Length - 1).ToLower()
            
            #line default
            #line hidden
, 22923), false)
, Tuple.Create(Tuple.Create("", 22974), Tuple.Create("]", 22974), true)
);

WriteLiteral(" />\r\n");

            
            #line 350 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is DateTime)
                                            {
                                                var date = (DateTime)field.Value;

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 23305), Tuple.Create("\"", 23329)
            
            #line 354 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 23312), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 23312), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 23330), Tuple.Create("\"", 23400)
, Tuple.Create(Tuple.Create("", 23338), Tuple.Create<System.Object, System.Int32>(new System.Web.WebPages.HelperResult(__razor_attribute_value_writer => {

            
            #line 354 "..\..\Views\Actions\Action.cshtml"
                                                                                                      if(date > DateTime.MinValue) { 
            
            #line default
            #line hidden
            
            #line 354 "..\..\Views\Actions\Action.cshtml"
                                                                                              WriteTo(__razor_attribute_value_writer, date.ToString("yyyy-MM-dd"));

            
            #line default
            #line hidden
            
            #line 354 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                  }
            
            #line default
            #line hidden
}), 23338), false)
);

WriteLiteral(" />\r\n");

            
            #line 355 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is bool)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 23643), Tuple.Create("\"", 23667)
            
            #line 358 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 23650), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 23650), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 23668), Tuple.Create("\"", 23699)
            
            #line 358 "..\..\Views\Actions\Action.cshtml"
                    , Tuple.Create(Tuple.Create("", 23676), Tuple.Create<System.Object, System.Int32>(field.Value.ToString()
            
            #line default
            #line hidden
, 23676), false)
);

WriteLiteral(" />\r\n");

            
            #line 359 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 23917), Tuple.Create("\"", 23941)
            
            #line 362 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 23924), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 23924), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 23942), Tuple.Create("\"", 23962)
            
            #line 362 "..\..\Views\Actions\Action.cshtml"
                    , Tuple.Create(Tuple.Create("", 23950), Tuple.Create<System.Object, System.Int32>(field.Value
            
            #line default
            #line hidden
, 23950), false)
);

WriteLiteral(" />\r\n");

            
            #line 363 "..\..\Views\Actions\Action.cshtml"
                                            }
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"submittedpagenames\"");

WriteAttribute("value", Tuple.Create(" value=\"", 24144), Tuple.Create("\"", 24221)
            
            #line 365 "..\..\Views\Actions\Action.cshtml"
             , Tuple.Create(Tuple.Create("", 24152), Tuple.Create<System.Object, System.Int32>(string.Join(",", Model.SubmittedPages.Select(p => p.GetType().Name))
            
            #line default
            #line hidden
, 24152), false)
);

WriteLiteral(" />\r\n");

WriteLiteral("                                        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"page\"");

WriteAttribute("value", Tuple.Create(" value=\"", 24299), Tuple.Create("\"", 24333)
            
            #line 366 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 24307), Tuple.Create<System.Object, System.Int32>(Model.Page.GetType().Name
            
            #line default
            #line hidden
, 24307), false)
);

WriteLiteral(" />\r\n");

WriteLiteral("                                        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"back\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" />\r\n");

            
            #line 368 "..\..\Views\Actions\Action.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </form>\r\n");

            
            #line 370 "..\..\Views\Actions\Action.cshtml"
                            }
                        }

            
            #line default
            #line hidden
WriteLiteral("                        <form");

WriteLiteral(" method=\"post\"");

WriteLiteral(" id=\"cancel-form\"");

WriteAttribute("action", Tuple.Create(" action=\"", 24627), Tuple.Create("\"", 24654)
            
            #line 372 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 24636), Tuple.Create<System.Object, System.Int32>(cancelActionUrl
            
            #line default
            #line hidden
, 24636), false)
);

WriteLiteral(">\r\n                            <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"cancel\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" />\r\n                        </form>\r\n                    </div>\r\n\r\n             " +
"   </div>\r\n            </div>\r\n        </div>\r\n");

WriteLiteral("        <script>\r\n            $(document).ready(function () {\r\n                $(" +
"\"#loader-wrapper\").removeClass(\'hide-bg\');\r\n                setTimeout(function " +
"() { $(\"#loader-wrapper\").css(\'display\', \'none\'); }, 500);\r\n            });\r\n   " +
"         $(\'#main-form-submit\').click(function (e) {\r\n                e.preventD" +
"efault()\r\n                var bValid = true;\r\n                $(document).find(\'" +
"input.required:visible\').each(function () {\r\n                    var formgroup =" +
" $(this).closest(\'.form-group\');\r\n                    if ($(this).val() === \'\') " +
"{\r\n                        formgroup.addClass(\'has-error\');\r\n                   " +
"     var label = formgroup.find(\'label.control-label\').text();\r\n\r\n              " +
"          console.log(formgroup.find(\'div\').index(0));\r\n                        " +
"if ($(this).closest(\'.col-md-9\').find(\'span.help-block\').length == 0)\r\n         " +
"                   $(this).closest(\'.col-md-9\').append(\'<span class=\"help-block\"" +
">The \' + label + \' field is required.</span>\');\r\n\r\n                        bVali" +
"d = false;\r\n                    } else {\r\n                        formgroup.remo" +
"veClass(\'has-error\');\r\n                        formgroup.find(\'span.help-block\')" +
".remove();\r\n                    }\r\n                });\r\n\r\n                if (bV" +
"alid) {\r\n                    setTimeout(function () { $(\"#loader-wrapper\").css(\'" +
"display\', \'block\'); }, 500);\r\n                    $(\"#loader-wrapper\").addClass(" +
"\'hide-bg\');\r\n                    $(\'#main-form\').submit.disabled = true;\r\n      " +
"              $(\'#main-form\').submit();\r\n                }\r\n            });\r\n   " +
"     </script>\r\n");

            
            #line 413 "..\..\Views\Actions\Action.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

DefineSection("Scripts", () => {

WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 417 "..\..\Views\Actions\Action.cshtml"
Write(Html.RenderDelayed());

            
            #line default
            #line hidden
WriteLiteral("\r\n");

});

        }
    }
}
#pragma warning restore 1591
