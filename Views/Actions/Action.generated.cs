#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    
    #line 8 "..\..\Views\Actions\Action.cshtml"
    using System;
    
    #line default
    #line hidden
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 4 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Core.Actions;
    
    #line default
    #line hidden
    
    #line 2 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Core.Entities;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Core.Interfaces;
    
    #line default
    #line hidden
    
    #line 5 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Core.Web.Utilities;
    
    #line default
    #line hidden
    
    #line 7 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Enquiries.Entities;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Enquiries.Interfaces;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Actions/Action.cshtml")]
    public partial class _Views_Actions_Action_cshtml : System.Web.Mvc.WebViewPage<Realtair.Framework.Core.Web.Controllers.ActionsController.ActionViewModel>
    {
        public _Views_Actions_Action_cshtml()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n");

            
            #line 10 "..\..\Views\Actions\Action.cshtml"
  
    var detailsTemplate = "-";
    var cancelActionUrl = "";

    if (Request.QueryString["ReturnUrl"] != null)
    {
        cancelActionUrl = Request.QueryString["ReturnUrl"].ToString();
    }

    if (Model.Action.This != null)
    {
        detailsTemplate = $"{Model.Action.This.ActualType().Name}/{Model.Action.GetType().Name}";
    }

    if (Html.ViewExists(detailsTemplate))
    {
        Layout = null;
        Html.RenderPartial(detailsTemplate, Model.Action);
    }
    else
    {
        IEnumerable<Field> shown;
        IEnumerable<Field> shownWithFieldSets;
        IEnumerable<Field> hidden;

        TempData["ShowSubmit"] = true;

        if (Model.IsMultiPage)
        {
            shown = Model.FieldsForPage;
            shownWithFieldSets = Model.FieldsForPage.Where(f => f.FieldSetAttribute != null).ToList();
            hidden = Model.HiddenFieldsForPage;
        }
        else
        {
            shown = Model.Fields;
            shownWithFieldSets = Model.Fields.Where(f => f.FieldSetAttribute != null).ToList();
            hidden = null;
        }

        


            
            #line default
            #line hidden
WriteLiteral("        <div");

WriteLiteral(" class=\"content bg-grey-lt\"");

WriteLiteral(">\r\n\r\n");

WriteLiteral("            ");

            
            #line 54 "..\..\Views\Actions\Action.cshtml"
       Write(Html.Partial("FlowerHorn/MobileNavigation"));

            
            #line default
            #line hidden
WriteLiteral("\r\n            <div");

WriteLiteral(" id=\"page-wrapper\"");

WriteLiteral(" class=\"padding-sides-sm pad-form-mob\"");

WriteLiteral(">\r\n                \r\n                <div");

WriteLiteral(" id=\"loader-wrapper\"");

WriteLiteral(" class=\"hide-bg\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" id=\"loader\"");

WriteLiteral("></div>\r\n                </div>\r\n\r\n                <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"col-sm-10 col-sm-offset-1\"");

WriteLiteral(">\r\n                        ");

WriteLiteral("\r\n                        <h2>\r\n");

            
            #line 65 "..\..\Views\Actions\Action.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 65 "..\..\Views\Actions\Action.cshtml"
                             if (Model.IsMultiPage)
                            {
                                
            
            #line default
            #line hidden
            
            #line 67 "..\..\Views\Actions\Action.cshtml"
                           Write(Model.Page.Name.ToUpper());

            
            #line default
            #line hidden
            
            #line 67 "..\..\Views\Actions\Action.cshtml"
                                                          
                            }
                            else
                            {
                                
            
            #line default
            #line hidden
            
            #line 71 "..\..\Views\Actions\Action.cshtml"
                           Write(Model.Action.Description(Html.LoggedInUser()).ToUpper());

            
            #line default
            #line hidden
            
            #line 71 "..\..\Views\Actions\Action.cshtml"
                                                                                        
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </h2>\r\n\r\n");

            
            #line 75 "..\..\Views\Actions\Action.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 75 "..\..\Views\Actions\Action.cshtml"
                          
                            var parentEnquiry = (Model.Action.This as IHasParentEnquiry)?.ParentEnquiry;
                            if (parentEnquiry != null)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <h3");

WriteLiteral(" class=\"no-margin-tb\"");

WriteLiteral(">\r\n                                    <i");

WriteLiteral(" class=\"fa fa-home\"");

WriteLiteral("></i> ");

            
            #line 80 "..\..\Views\Actions\Action.cshtml"
                                                           Write(parentEnquiry.Description(Html.LoggedInUser()));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </h3>\r\n");

WriteLiteral("                                <br />\r\n");

            
            #line 83 "..\..\Views\Actions\Action.cshtml"
                            }
                        
            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n                        ");

WriteLiteral("\r\n");

            
            #line 87 "..\..\Views\Actions\Action.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 87 "..\..\Views\Actions\Action.cshtml"
                         if (Model.Action.HasValidated && !Model.Action.IsValid)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <div");

WriteLiteral(" class=\"col-md-12\"");

WriteLiteral(" style=\"padding: 0;\"");

WriteLiteral(">\r\n");

            
            #line 90 "..\..\Views\Actions\Action.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 90 "..\..\Views\Actions\Action.cshtml"
                                 foreach (var error in Model.Action.Errors.Where(e => e.MemberNames.Count() == 0))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\"alert alert-danger\"");

WriteLiteral(">");

            
            #line 92 "..\..\Views\Actions\Action.cshtml"
                                                               Write(error.ErrorMessage);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");

            
            #line 93 "..\..\Views\Actions\Action.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n");

            
            #line 95 "..\..\Views\Actions\Action.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                            ");

WriteLiteral("\r\n                            <div");

WriteLiteral(" class=\"col-sm-12\"");

WriteLiteral(">\r\n                                ");

WriteLiteral("\r\n                                <form");

WriteLiteral(" class=\"form-horizontal panel panel-body form-padding\"");

WriteLiteral(" id=\"main-form\"");

WriteLiteral(" method=\"post\"");

WriteLiteral(">\r\n");

            
            #line 135 "..\..\Views\Actions\Action.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 135 "..\..\Views\Actions\Action.cshtml"
                                     foreach (var field in shown)
                                    {
                                        if (field.FieldSetAttribute != null)
                                        {
                                            var fieldSetItems = shownWithFieldSets.Where(s => s.FieldSetAttribute.Legend == field.FieldSetAttribute.Legend).ToList();
                                            if (fieldSetItems.Any())
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <fieldset");

WriteLiteral(" class=\"margin-t-md\"");

WriteLiteral(">\r\n                                                    <legend>");

            
            #line 143 "..\..\Views\Actions\Action.cshtml"
                                                       Write(field.FieldSetAttribute.Legend);

            
            #line default
            #line hidden
WriteLiteral("</legend>\r\n                                                    <div");

WriteLiteral(" class=\"p-l-30\"");

WriteLiteral(">\r\n");

            
            #line 145 "..\..\Views\Actions\Action.cshtml"
                                                        
            
            #line default
            #line hidden
            
            #line 145 "..\..\Views\Actions\Action.cshtml"
                                                         foreach (var item in fieldSetItems)
                                                        {
                                                            var fieldWithReturnType = $"Fields/_{item.PropertyType.Name}_{item.FieldAttribute.GetType().Name.Substring(0, item.FieldAttribute.GetType().Name.Length - "Attribute".Length)}";
                                                            var fieldWithoutReturnType = $"Fields/_{item.FieldAttribute.GetType().Name.Substring(0, item.FieldAttribute.GetType().Name.Length - "Attribute".Length)}";
                                                            var fieldThatWorksForBoth = $"Fields/_{item.PropertyType.Name}_Field";

                                                            if (Html.ViewExists(fieldWithReturnType))
                                                            {
                                                                Html.RenderPartial(fieldWithReturnType, item);
                                                            }
                                                            else if (Html.ViewExists(fieldWithoutReturnType))
                                                            {
                                                                Html.RenderPartial(fieldWithoutReturnType, item);
                                                            }
                                                            else if (Html.ViewExists(fieldThatWorksForBoth))
                                                            {
                                                                Html.RenderPartial(fieldThatWorksForBoth, item);
                                                            }
                                                            else
                                                            {


            
            #line default
            #line hidden
WriteLiteral("                                                                <p> Cannot render" +
" field view, looked for both ");

            
            #line 166 "..\..\Views\Actions\Action.cshtml"
                                                                                                         Write(fieldWithReturnType);

            
            #line default
            #line hidden
WriteLiteral(" and ");

            
            #line 166 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                  Write(fieldWithoutReturnType);

            
            #line default
            #line hidden
WriteLiteral(" </p>\r\n");

            
            #line 167 "..\..\Views\Actions\Action.cshtml"

                                                            }
                                                        }

            
            #line default
            #line hidden
WriteLiteral("                                                    </div>\r\n                     " +
"                           </fieldset>");

            
            #line 171 "..\..\Views\Actions\Action.cshtml"
                                                           shownWithFieldSets = shownWithFieldSets.Except(fieldSetItems).ToList();
                                            }
                                        }
                                        else
                                        {
                                            var fieldWithReturnType = $"Fields/_{field.PropertyType.Name}_{field.FieldAttribute.GetType().Name.Substring(0, field.FieldAttribute.GetType().Name.Length - "Attribute".Length)}";
                                            var fieldWithoutReturnType = $"Fields/_{field.FieldAttribute.GetType().Name.Substring(0, field.FieldAttribute.GetType().Name.Length - "Attribute".Length)}";
                                            var fieldThatWorksForBoth = $"Fields/_{field.PropertyType.Name}_Field";

                                            if (Html.ViewExists(fieldWithReturnType))
                                            {
                                                Html.RenderPartial(fieldWithReturnType, field);
                                            }
                                            else if (Html.ViewExists(fieldWithoutReturnType))
                                            {
                                                Html.RenderPartial(fieldWithoutReturnType, field);
                                            }
                                            else if (Html.ViewExists(fieldThatWorksForBoth))
                                            {
                                                Html.RenderPartial(fieldThatWorksForBoth, field);
                                            }
                                            else
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <p>Cannot render field view, look" +
"ed for both ");

            
            #line 194 "..\..\Views\Actions\Action.cshtml"
                                                                                        Write(fieldWithReturnType);

            
            #line default
            #line hidden
WriteLiteral(" and ");

            
            #line 194 "..\..\Views\Actions\Action.cshtml"
                                                                                                                 Write(fieldWithoutReturnType);

            
            #line default
            #line hidden
WriteLiteral("</p>\r\n");

            
            #line 195 "..\..\Views\Actions\Action.cshtml"
                                            }
                                        }
                                    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 199 "..\..\Views\Actions\Action.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 199 "..\..\Views\Actions\Action.cshtml"
                                     if (hidden != null)
                                    {
                                        foreach (var field in hidden)
                                        {
                                            if (field.FieldAttribute is Realtair.Framework.Core.Actions.FieldAttributes.BulkFileUploadFieldAttribute && field.Value is IEnumerable<Attachment>)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 11845), Tuple.Create("\"", 11869)
            
            #line 205 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 11852), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 11852), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 11870), Tuple.Create("\"", 11956)
, Tuple.Create(Tuple.Create("", 11878), Tuple.Create("[", 11878), true)
, Tuple.Create(Tuple.Create("", 11879), Tuple.Create<System.Object, System.Int32>(new System.Web.WebPages.HelperResult(__razor_attribute_value_writer => {

            
            #line 205 "..\..\Views\Actions\Action.cshtml"
                                                                                                       foreach (var a in field.Value as IEnumerable<Attachment>) { 
            
            #line default
            #line hidden
            
            #line 205 "..\..\Views\Actions\Action.cshtml"
                                                                                                                             WriteTo(__razor_attribute_value_writer, a.Id + ",");

            
            #line default
            #line hidden
            
            #line 205 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                                 }
            
            #line default
            #line hidden
}), 11879), false)
, Tuple.Create(Tuple.Create("", 11955), Tuple.Create("]", 11955), true)
);

WriteLiteral(" />\r\n");

            
            #line 206 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is IList<Attachment>)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 12212), Tuple.Create("\"", 12236)
            
            #line 209 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 12219), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 12219), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 12237), Tuple.Create("\"", 12328)
, Tuple.Create(Tuple.Create("", 12245), Tuple.Create("[", 12245), true)
            
            #line 209 "..\..\Views\Actions\Action.cshtml"
                      , Tuple.Create(Tuple.Create("", 12246), Tuple.Create<System.Object, System.Int32>(string.Join(",",((IList<Attachment>)field.Value).Select(f => f.Id.ToString()))
            
            #line default
            #line hidden
, 12246), false)
, Tuple.Create(Tuple.Create("", 12327), Tuple.Create("]", 12327), true)
);

WriteLiteral(" />\r\n");

            
            #line 210 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is ICustomViewModel)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 12583), Tuple.Create("\"", 12607)
            
            #line 213 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 12590), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 12590), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 12608), Tuple.Create("\"", 12664)
            
            #line 213 "..\..\Views\Actions\Action.cshtml"
                     , Tuple.Create(Tuple.Create("", 12616), Tuple.Create<System.Object, System.Int32>((field.Value as ICustomViewModel).Serialize()
            
            #line default
            #line hidden
, 12616), false)
);

WriteLiteral(" />\r\n");

            
            #line 214 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is IEnumerable<ICustomViewModel>)
                                            {
                                                if ((field.Value as IEnumerable<ICustomViewModel>).Count() > 0)
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 13100), Tuple.Create("\"", 13124)
            
            #line 219 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 13107), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 13107), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 13125), Tuple.Create("\"", 13229)
, Tuple.Create(Tuple.Create("", 13133), Tuple.Create("[", 13133), true)
            
            #line 219 "..\..\Views\Actions\Action.cshtml"
                          , Tuple.Create(Tuple.Create("", 13134), Tuple.Create<System.Object, System.Int32>(string.Join(",", (field.Value as IEnumerable<ICustomViewModel>).Select(s => s.Serialize()))
            
            #line default
            #line hidden
, 13134), false)
, Tuple.Create(Tuple.Create("", 13228), Tuple.Create("]", 13228), true)
);

WriteLiteral(" />\r\n");

            
            #line 220 "..\..\Views\Actions\Action.cshtml"
                                                }
                                            }
                                            else if (field.Value is IEnumerable<Entity>)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 13538), Tuple.Create("\"", 13562)
            
            #line 224 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 13545), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 13545), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 13563), Tuple.Create("\"", 13659)
, Tuple.Create(Tuple.Create("", 13571), Tuple.Create("[", 13571), true)
            
            #line 224 "..\..\Views\Actions\Action.cshtml"
                      , Tuple.Create(Tuple.Create("", 13572), Tuple.Create<System.Object, System.Int32>(string.Join(",", (field.Value as IEnumerable<Entity>).Select(e => e.Id.ToString()))
            
            #line default
            #line hidden
, 13572), false)
, Tuple.Create(Tuple.Create("", 13658), Tuple.Create("]", 13658), true)
);

WriteLiteral(" />\r\n");

            
            #line 225 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is Entity)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 13904), Tuple.Create("\"", 13928)
            
            #line 228 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 13911), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 13911), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 13929), Tuple.Create("\"", 13966)
            
            #line 228 "..\..\Views\Actions\Action.cshtml"
                     , Tuple.Create(Tuple.Create("", 13937), Tuple.Create<System.Object, System.Int32>((field.Value as Entity).Id
            
            #line default
            #line hidden
, 13937), false)
);

WriteLiteral(" />\r\n");

            
            #line 229 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.FieldAttribute is Realtair.Framework.Core.Actions.FieldAttributes.WidgetFieldAttribute)
                                            {

                                            }
                                            else if (field.Value is bool?[])
                                            {
                                                var values = "";
                                                foreach (var v in (field.Value as IEnumerable<bool?>).ToList())
                                                {
                                                    if (v != null) { values += v + ","; }
                                                    else { values += "null,"; }

                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 14911), Tuple.Create("\"", 14935)
            
            #line 243 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 14918), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 14918), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 14936), Tuple.Create("\"", 14997)
, Tuple.Create(Tuple.Create("", 14944), Tuple.Create("[", 14944), true)
            
            #line 243 "..\..\Views\Actions\Action.cshtml"
                      , Tuple.Create(Tuple.Create("", 14945), Tuple.Create<System.Object, System.Int32>(values.Substring(0, values.Length - 1).ToLower()
            
            #line default
            #line hidden
, 14945), false)
, Tuple.Create(Tuple.Create("", 14996), Tuple.Create("]", 14996), true)
);

WriteLiteral(" />\r\n");

            
            #line 244 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is DateTime)
                                            {
                                                var date = (DateTime)field.Value;

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 15327), Tuple.Create("\"", 15351)
            
            #line 248 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 15334), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 15334), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 15352), Tuple.Create("\"", 15422)
, Tuple.Create(Tuple.Create("", 15360), Tuple.Create<System.Object, System.Int32>(new System.Web.WebPages.HelperResult(__razor_attribute_value_writer => {

            
            #line 248 "..\..\Views\Actions\Action.cshtml"
                                                                                                      if(date > DateTime.MinValue) { 
            
            #line default
            #line hidden
            
            #line 248 "..\..\Views\Actions\Action.cshtml"
                                                                                              WriteTo(__razor_attribute_value_writer, date.ToString("yyyy-MM-dd"));

            
            #line default
            #line hidden
            
            #line 248 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                  }
            
            #line default
            #line hidden
}), 15360), false)
);

WriteLiteral(" />\r\n");

            
            #line 249 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is bool)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 15665), Tuple.Create("\"", 15689)
            
            #line 252 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 15672), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 15672), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 15690), Tuple.Create("\"", 15721)
            
            #line 252 "..\..\Views\Actions\Action.cshtml"
                    , Tuple.Create(Tuple.Create("", 15698), Tuple.Create<System.Object, System.Int32>(field.Value.ToString()
            
            #line default
            #line hidden
, 15698), false)
);

WriteLiteral(" />\r\n");

            
            #line 253 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 15939), Tuple.Create("\"", 15963)
            
            #line 256 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 15946), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 15946), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 15964), Tuple.Create("\"", 15984)
            
            #line 256 "..\..\Views\Actions\Action.cshtml"
                    , Tuple.Create(Tuple.Create("", 15972), Tuple.Create<System.Object, System.Int32>(field.Value
            
            #line default
            #line hidden
, 15972), false)
);

WriteLiteral(" />\r\n");

            
            #line 257 "..\..\Views\Actions\Action.cshtml"
                                            }
                                        }


            
            #line default
            #line hidden
WriteLiteral("                                        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"submittedpagenames\"");

WriteAttribute("value", Tuple.Create(" value=\"", 16168), Tuple.Create("\"", 16245)
            
            #line 260 "..\..\Views\Actions\Action.cshtml"
             , Tuple.Create(Tuple.Create("", 16176), Tuple.Create<System.Object, System.Int32>(string.Join(",", Model.SubmittedPages.Select(p => p.GetType().Name))
            
            #line default
            #line hidden
, 16176), false)
);

WriteLiteral(" />\r\n");

WriteLiteral("                                        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"page\"");

WriteAttribute("value", Tuple.Create(" value=\"", 16323), Tuple.Create("\"", 16357)
            
            #line 261 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 16331), Tuple.Create<System.Object, System.Int32>(Model.Page.GetType().Name
            
            #line default
            #line hidden
, 16331), false)
);

WriteLiteral(" />\r\n");

            
            #line 262 "..\..\Views\Actions\Action.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" style=\"position: absolute; left: -9999px; width: 1px; height: 1px;\"");

WriteLiteral(" tabindex=\"-1\"");

WriteLiteral(" />\r\n                                </form>\r\n\r\n");

            
            #line 267 "..\..\Views\Actions\Action.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 267 "..\..\Views\Actions\Action.cshtml"
                                 if ((bool)TempData["ShowSubmit"] || Model.SubmittedPages.Count != 0)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\"form-group margin-tb-md\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"col-sm-12\"");

WriteLiteral(">\r\n                                            <ul");

WriteLiteral(" class=\"pull-right list-inline\"");

WriteLiteral(">\r\n");

            
            #line 272 "..\..\Views\Actions\Action.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 272 "..\..\Views\Actions\Action.cshtml"
                                                 if (Model.SubmittedPages.Count != 0)
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <li><a");

WriteLiteral(" href=\"javascript:void(0);\"");

WriteLiteral(" class=\"btn btn-task btn-form btn-trans-grey uppercase\"");

WriteLiteral(" onclick=\'$(\"#back-form\").submit();\'");

WriteLiteral(">BACK</a></li>\r\n");

            
            #line 275 "..\..\Views\Actions\Action.cshtml"
                                                }
                                                else
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <li><a");

WriteLiteral(" href=\"javascript:void(0);\"");

WriteLiteral(" class=\"btn btn-task btn-form btn-trans-red uppercase\"");

WriteLiteral(" onclick=\'$(\"#cancel-form\").submit();\'");

WriteLiteral(">CANCEL</a></li>\r\n");

            
            #line 279 "..\..\Views\Actions\Action.cshtml"
                                                }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 281 "..\..\Views\Actions\Action.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 281 "..\..\Views\Actions\Action.cshtml"
                                                 if ((bool)TempData["ShowSubmit"])
                                                {
                                                    if (!Model.IsMultiPage)
                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                        <li><a");

WriteLiteral(" href=\"javascript:void(0);\"");

WriteLiteral(" class=\"btn btn-task btn-form btn-trans-green uppercase\"");

WriteLiteral(" onclick=\'$(\"#main-form\").submit();\'");

WriteLiteral(">");

            
            #line 285 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                                 Write(Model.Action.SubmitValue);

            
            #line default
            #line hidden
WriteLiteral("</a></li>\r\n");

            
            #line 286 "..\..\Views\Actions\Action.cshtml"
                                                    }
                                                    else
                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                        <li><a");

WriteLiteral(" href=\"javascript:void(0);\"");

WriteLiteral(" class=\"btn btn-task btn-form btn-trans-grey uppercase\"");

WriteLiteral(" onclick=\'$(\"#main-form\").submit();\'");

WriteLiteral(">");

            
            #line 289 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                                Write(Model.Action.SubmitValue);

            
            #line default
            #line hidden
WriteLiteral("</a></li>\r\n");

            
            #line 290 "..\..\Views\Actions\Action.cshtml"
                                                    }
                                                }

            
            #line default
            #line hidden
WriteLiteral("                                            </ul>\r\n                              " +
"          </div>\r\n                                    </div>\r\n");

            
            #line 295 "..\..\Views\Actions\Action.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n                        </div>\r\n\r\n");

            
            #line 299 "..\..\Views\Actions\Action.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 299 "..\..\Views\Actions\Action.cshtml"
                         if (Model.IsMultiPage)
                        {
                            if (Model.SubmittedPages.Count != 0)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <form");

WriteLiteral(" method=\"post\"");

WriteLiteral(" id=\"back-form\"");

WriteLiteral(">\r\n");

            
            #line 304 "..\..\Views\Actions\Action.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 304 "..\..\Views\Actions\Action.cshtml"
                                     if (hidden != null)
                                    {
                                        foreach (var field in hidden)
                                        {
                                            if (field.FieldAttribute is Realtair.Framework.Core.Actions.FieldAttributes.BulkFileUploadFieldAttribute && field.Value is IEnumerable<Attachment>)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 19668), Tuple.Create("\"", 19692)
            
            #line 310 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 19675), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 19675), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 19693), Tuple.Create("\"", 19779)
, Tuple.Create(Tuple.Create("", 19701), Tuple.Create("[", 19701), true)
, Tuple.Create(Tuple.Create("", 19702), Tuple.Create<System.Object, System.Int32>(new System.Web.WebPages.HelperResult(__razor_attribute_value_writer => {

            
            #line 310 "..\..\Views\Actions\Action.cshtml"
                                                                                                       foreach (var a in field.Value as IEnumerable<Attachment>) { 
            
            #line default
            #line hidden
            
            #line 310 "..\..\Views\Actions\Action.cshtml"
                                                                                                                             WriteTo(__razor_attribute_value_writer, a.Id + ",");

            
            #line default
            #line hidden
            
            #line 310 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                                 }
            
            #line default
            #line hidden
}), 19702), false)
, Tuple.Create(Tuple.Create("", 19778), Tuple.Create("]", 19778), true)
);

WriteLiteral(" />\r\n");

            
            #line 311 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is IEnumerable<Attachment>)
                                            {
                                                foreach (var file in (IEnumerable<Attachment>)field.Value)
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 20204), Tuple.Create("\"", 20228)
            
            #line 316 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 20211), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 20211), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 20229), Tuple.Create("\"", 20247)
            
            #line 316 "..\..\Views\Actions\Action.cshtml"
                         , Tuple.Create(Tuple.Create("", 20237), Tuple.Create<System.Object, System.Int32>(file.Id
            
            #line default
            #line hidden
, 20237), false)
);

WriteLiteral(" />");

            
            #line 316 "..\..\Views\Actions\Action.cshtml"
                                                                                                                       }
                                            }
                                            else if (field.Value is ICustomViewModel)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 20503), Tuple.Create("\"", 20527)
            
            #line 320 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 20510), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 20510), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 20528), Tuple.Create("\"", 20584)
            
            #line 320 "..\..\Views\Actions\Action.cshtml"
                     , Tuple.Create(Tuple.Create("", 20536), Tuple.Create<System.Object, System.Int32>((field.Value as ICustomViewModel).Serialize()
            
            #line default
            #line hidden
, 20536), false)
);

WriteLiteral(" />\r\n");

            
            #line 321 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is IEnumerable<ICustomViewModel>)
                                            {
                                                if ((field.Value as IEnumerable<ICustomViewModel>).Count() > 0)
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 21020), Tuple.Create("\"", 21044)
            
            #line 326 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 21027), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 21027), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 21045), Tuple.Create("\"", 21149)
, Tuple.Create(Tuple.Create("", 21053), Tuple.Create("[", 21053), true)
            
            #line 326 "..\..\Views\Actions\Action.cshtml"
                          , Tuple.Create(Tuple.Create("", 21054), Tuple.Create<System.Object, System.Int32>(string.Join(",", (field.Value as IEnumerable<ICustomViewModel>).Select(s => s.Serialize()))
            
            #line default
            #line hidden
, 21054), false)
, Tuple.Create(Tuple.Create("", 21148), Tuple.Create("]", 21148), true)
);

WriteLiteral(" />");

            
            #line 326 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                                                             }
                                            }
                                            else if (field.Value is Entity)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 21395), Tuple.Create("\"", 21419)
            
            #line 330 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 21402), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 21402), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 21420), Tuple.Create("\"", 21457)
            
            #line 330 "..\..\Views\Actions\Action.cshtml"
                     , Tuple.Create(Tuple.Create("", 21428), Tuple.Create<System.Object, System.Int32>((field.Value as Entity).Id
            
            #line default
            #line hidden
, 21428), false)
);

WriteLiteral(" />\r\n");

            
            #line 331 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is IEnumerable<Entity>)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 21715), Tuple.Create("\"", 21739)
            
            #line 334 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 21722), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 21722), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 21740), Tuple.Create("\"", 21836)
, Tuple.Create(Tuple.Create("", 21748), Tuple.Create("[", 21748), true)
            
            #line 334 "..\..\Views\Actions\Action.cshtml"
                      , Tuple.Create(Tuple.Create("", 21749), Tuple.Create<System.Object, System.Int32>(string.Join(",", (field.Value as IEnumerable<Entity>).Select(e => e.Id.ToString()))
            
            #line default
            #line hidden
, 21749), false)
, Tuple.Create(Tuple.Create("", 21835), Tuple.Create("]", 21835), true)
);

WriteLiteral(" />\r\n");

            
            #line 335 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.FieldAttribute is Realtair.Framework.Core.Actions.FieldAttributes.WidgetFieldAttribute)
                                            {

                                            }
                                            else if (field.Value is bool?[])
                                            {
                                                var values = "";
                                                foreach (var v in (field.Value as IEnumerable<bool?>).ToList())
                                                {
                                                    if (v != null) { values += v + ","; }
                                                    else { values += "null,"; }

                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 22781), Tuple.Create("\"", 22805)
            
            #line 349 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 22788), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 22788), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 22806), Tuple.Create("\"", 22867)
, Tuple.Create(Tuple.Create("", 22814), Tuple.Create("[", 22814), true)
            
            #line 349 "..\..\Views\Actions\Action.cshtml"
                      , Tuple.Create(Tuple.Create("", 22815), Tuple.Create<System.Object, System.Int32>(values.Substring(0, values.Length - 1).ToLower()
            
            #line default
            #line hidden
, 22815), false)
, Tuple.Create(Tuple.Create("", 22866), Tuple.Create("]", 22866), true)
);

WriteLiteral(" />\r\n");

            
            #line 350 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is DateTime)
                                            {
                                                var date = (DateTime)field.Value;

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 23197), Tuple.Create("\"", 23221)
            
            #line 354 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 23204), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 23204), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 23222), Tuple.Create("\"", 23292)
, Tuple.Create(Tuple.Create("", 23230), Tuple.Create<System.Object, System.Int32>(new System.Web.WebPages.HelperResult(__razor_attribute_value_writer => {

            
            #line 354 "..\..\Views\Actions\Action.cshtml"
                                                                                                      if(date > DateTime.MinValue) { 
            
            #line default
            #line hidden
            
            #line 354 "..\..\Views\Actions\Action.cshtml"
                                                                                              WriteTo(__razor_attribute_value_writer, date.ToString("yyyy-MM-dd"));

            
            #line default
            #line hidden
            
            #line 354 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                  }
            
            #line default
            #line hidden
}), 23230), false)
);

WriteLiteral(" />\r\n");

            
            #line 355 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is bool)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 23535), Tuple.Create("\"", 23559)
            
            #line 358 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 23542), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 23542), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 23560), Tuple.Create("\"", 23591)
            
            #line 358 "..\..\Views\Actions\Action.cshtml"
                    , Tuple.Create(Tuple.Create("", 23568), Tuple.Create<System.Object, System.Int32>(field.Value.ToString()
            
            #line default
            #line hidden
, 23568), false)
);

WriteLiteral(" />\r\n");

            
            #line 359 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 23809), Tuple.Create("\"", 23833)
            
            #line 362 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 23816), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 23816), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 23834), Tuple.Create("\"", 23854)
            
            #line 362 "..\..\Views\Actions\Action.cshtml"
                    , Tuple.Create(Tuple.Create("", 23842), Tuple.Create<System.Object, System.Int32>(field.Value
            
            #line default
            #line hidden
, 23842), false)
);

WriteLiteral(" />\r\n");

            
            #line 363 "..\..\Views\Actions\Action.cshtml"
                                            }
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"submittedpagenames\"");

WriteAttribute("value", Tuple.Create(" value=\"", 24036), Tuple.Create("\"", 24113)
            
            #line 365 "..\..\Views\Actions\Action.cshtml"
             , Tuple.Create(Tuple.Create("", 24044), Tuple.Create<System.Object, System.Int32>(string.Join(",", Model.SubmittedPages.Select(p => p.GetType().Name))
            
            #line default
            #line hidden
, 24044), false)
);

WriteLiteral(" />\r\n");

WriteLiteral("                                        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"page\"");

WriteAttribute("value", Tuple.Create(" value=\"", 24191), Tuple.Create("\"", 24225)
            
            #line 366 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 24199), Tuple.Create<System.Object, System.Int32>(Model.Page.GetType().Name
            
            #line default
            #line hidden
, 24199), false)
);

WriteLiteral(" />\r\n");

WriteLiteral("                                        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"back\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" />\r\n");

            
            #line 368 "..\..\Views\Actions\Action.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </form>\r\n");

            
            #line 370 "..\..\Views\Actions\Action.cshtml"
                            }
                        }

            
            #line default
            #line hidden
WriteLiteral("                        <form");

WriteLiteral(" method=\"post\"");

WriteLiteral(" id=\"cancel-form\"");

WriteAttribute("action", Tuple.Create(" action=\"", 24519), Tuple.Create("\"", 24546)
            
            #line 372 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 24528), Tuple.Create<System.Object, System.Int32>(cancelActionUrl
            
            #line default
            #line hidden
, 24528), false)
);

WriteLiteral(">\r\n                            <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"cancel\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" />\r\n                        </form>\r\n                    </div>\r\n\r\n             " +
"   </div>\r\n            </div>\r\n        </div>\r\n");

WriteLiteral(@"        <script>
            $(document).ready(function () { $(""#loader-wrapper"").css('display', 'none'); });
            $('#main-form-submit').click(function (e) {
				e.preventDefault()
				var bValid = true;
				$(document).find('input.required:visible').each(function () {
					var formgroup = $(this).closest('.form-group');
					if ($(this).val() === '') {
						formgroup.addClass('has-error');
						var label = formgroup.find('label.control-label').text();

						console.log(formgroup.find('div').index(0));
						if ($(this).closest('.col-md-9').find('span.help-block').length == 0)
							$(this).closest('.col-md-9').append('<span class=""help-block"">The ' + label + ' field is required.</span>');

						bValid = false;
					} else {
						formgroup.removeClass('has-error');
						formgroup.find('span.help-block').remove();
					}
				});

				if (bValid) {
                    $(""#loader-wrapper"").css('display', 'block');
                    $('#main-form').submit.disabled = true;
					$('#main-form').submit();
				}
			});
        </script>
");

            
            #line 409 "..\..\Views\Actions\Action.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

DefineSection("Scripts", () => {

WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 413 "..\..\Views\Actions\Action.cshtml"
Write(Html.RenderDelayed());

            
            #line default
            #line hidden
WriteLiteral("\r\n");

});

        }
    }
}
#pragma warning restore 1591
