#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 4 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Core.Actions;
    
    #line default
    #line hidden
    
    #line 2 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Core.Entities;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Core.Interfaces;
    
    #line default
    #line hidden
    
    #line 5 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Core.Web.Utilities;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Actions/Action.cshtml")]
    public partial class _Views_Actions_Action_cshtml : System.Web.Mvc.WebViewPage<Realtair.Framework.Core.Web.Controllers.ActionsController.ActionViewModel>
    {
        public _Views_Actions_Action_cshtml()
        {
        }
        public override void Execute()
        {





WriteLiteral("\r\n");


            
            #line 7 "..\..\Views\Actions\Action.cshtml"
  
    var detailsTemplate = "-";

    if (Model.Action.This != null)
    {
        detailsTemplate = $"{Model.Action.This.ActualType().Name}/{Model.Action.GetType().Name}";
    }

    if (Html.ViewExists(detailsTemplate))
    {
        Layout = null;
        Html.RenderPartial(detailsTemplate, Model.Action);
    }
    else
    {
        IEnumerable<Field> shown;
        IEnumerable<Field> hidden;

        TempData["ShowSubmit"] = true;

        if (Model.IsMultiPage)
        {
            shown = Model.FieldsForPage;
            hidden = Model.HiddenFieldsForPage;
        }
        else
        {
            shown = Model.Fields;
            hidden = null;
        }


            
            #line default
            #line hidden
WriteLiteral(@"        <body id=""page-action"">

            <header id=""section-header"" class=""header-admin header-sm main-in-header"" role=""banner"">

                <div class=""bg-header"">
                    <div class=""overlay-gradient-radial""></div>
                    <div class=""overlay-gradient-linear""></div>
                    <div class=""bg-default"">
                    </div>
                </div>

                ");


            
            #line 49 "..\..\Views\Actions\Action.cshtml"
           Write(Html.Partial("BackMenu"));

            
            #line default
            #line hidden
WriteLiteral(@"
                <div class=""header-content"">

                    <div class=""title-hero"">
                        <div class=""container"">
                            <div class=""row"">
                                <div class=""col-sm-12"">
                                    <h1 class=""ellipsis"">
                                        <strong>");


            
            #line 57 "..\..\Views\Actions\Action.cshtml"
                                           Write(Model.Action.Description(Html.LoggedInUser()));

            
            #line default
            #line hidden
WriteLiteral("</strong>\r\n                                        <small class=\"ellipsis\">");


            
            #line 58 "..\..\Views\Actions\Action.cshtml"
                                                            Write(Model.Action.This != null && Model.Action.This.Id != 0 ? Model.Action.This.Description(Html.LoggedInUser()) : (Model.Action.CalledBy != null && Model.Action.CalledBy.Id != 0 ? Model.Action.CalledBy.Description(Html.LoggedInUser()) : Model.Action.CalledBy.ActualType().Name.DisplaySafeName()) );

            
            #line default
            #line hidden
WriteLiteral(@"</small>
                                    </h1>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""clearfix""></div>
                </div>

            </header>

            <div class=""loading"" style=""display: none;""><span class=""message"">Loading...</span></div>
            <div class=""clearfix""></div>
            <main class=""in-header"">
                <div class=""container"">
                    <div class=""panel panel-default"">
                        <form class=""autoform form-horizontal"" id=""main-form"" method=""post"">
                            <div class=""panel-body"">

");


            
            #line 77 "..\..\Views\Actions\Action.cshtml"
                                 if (Model.Action.HasValidated && !Model.Action.IsValid)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div class=\"col-md-12\">\r\n");


            
            #line 80 "..\..\Views\Actions\Action.cshtml"
                                         foreach (var error in Model.Action.Errors.Where(e => e.MemberNames.Count() == 0))
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <p class=\"brand-danger\">");


            
            #line 82 "..\..\Views\Actions\Action.cshtml"
                                                               Write(error.ErrorMessage);

            
            #line default
            #line hidden
WriteLiteral("</p>\r\n");


            
            #line 83 "..\..\Views\Actions\Action.cshtml"
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                    </div>\r\n");


            
            #line 85 "..\..\Views\Actions\Action.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");


            
            #line 88 "..\..\Views\Actions\Action.cshtml"
                                 foreach (var field in shown)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div class=\"col-md-12\">\r\n");


            
            #line 91 "..\..\Views\Actions\Action.cshtml"
                                          
                                            var fieldWithReturnType = $"Fields/_{field.PropertyType.Name}_{field.FieldAttribute.GetType().Name.Substring(0, field.FieldAttribute.GetType().Name.Length - "Attribute".Length)}";
                                            var fieldWithoutReturnType = $"Fields/_{field.FieldAttribute.GetType().Name.Substring(0, field.FieldAttribute.GetType().Name.Length - "Attribute".Length)}";

                                            if (Html.ViewExists(fieldWithReturnType))
                                            {
                                                Html.RenderPartial(fieldWithReturnType, field);
                                            }
                                            else if (Html.ViewExists(fieldWithoutReturnType))
                                            {
                                                Html.RenderPartial(fieldWithoutReturnType, field);
                                            }
                                            else
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <p>Cannot render field view, look" +
"ed for both ");


            
            #line 105 "..\..\Views\Actions\Action.cshtml"
                                                                                        Write(fieldWithReturnType);

            
            #line default
            #line hidden
WriteLiteral(" and ");


            
            #line 105 "..\..\Views\Actions\Action.cshtml"
                                                                                                                 Write(fieldWithoutReturnType);

            
            #line default
            #line hidden
WriteLiteral("</p>\r\n");


            
            #line 106 "..\..\Views\Actions\Action.cshtml"
                                            }
                                        

            
            #line default
            #line hidden
WriteLiteral("                                    </div>\r\n");


            
            #line 109 "..\..\Views\Actions\Action.cshtml"
                                            }

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 111 "..\..\Views\Actions\Action.cshtml"
                                 if (hidden != null)
                                {
                                    foreach (var field in hidden)
                                    {
                                        if (field.FieldAttribute is Realtair.Framework.Core.Actions.FieldAttributes.BulkFileUploadFieldAttribute && field.Value is IEnumerable<Attachment>)
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <input type=\"hidden\" name=\"");


            
            #line 117 "..\..\Views\Actions\Action.cshtml"
                                                                  Write(field.UniqueName);

            
            #line default
            #line hidden

            
            #line 117 "..\..\Views\Actions\Action.cshtml"
                                                                                        WriteLiteral("\" value=\"[");

            
            #line default
            #line hidden
            
            #line 117 "..\..\Views\Actions\Action.cshtml"
                                                                                                   foreach (var a in field.Value as IEnumerable<Attachment>) { 
            
            #line default
            #line hidden
            
            #line 117 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                           Write(a.Id + ",");

            
            #line default
            #line hidden
            
            #line 117 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                             }
            
            #line default
            #line hidden
WriteLiteral("]\" />\r\n");


            
            #line 118 "..\..\Views\Actions\Action.cshtml"
                                        }
                                        else if (field.Value is IList<Attachment>)
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <input type=\"hidden\" name=\"");


            
            #line 121 "..\..\Views\Actions\Action.cshtml"
                                                                  Write(field.UniqueName);

            
            #line default
            #line hidden
WriteLiteral("\" value=\"[");


            
            #line 121 "..\..\Views\Actions\Action.cshtml"
                                                                                              Write(string.Join(",",((IList<Attachment>)field.Value).Select(f => f.Id.ToString())));

            
            #line default
            #line hidden
WriteLiteral("]\" />\r\n");


            
            #line 122 "..\..\Views\Actions\Action.cshtml"
                                        }
                                        else if (field.Value is ICustomViewModel)
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <input type=\"hidden\" name=\"");


            
            #line 125 "..\..\Views\Actions\Action.cshtml"
                                                                  Write(field.UniqueName);

            
            #line default
            #line hidden
WriteLiteral("\" value=\"");


            
            #line 125 "..\..\Views\Actions\Action.cshtml"
                                                                                             Write((field.Value as ICustomViewModel).Serialize());

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n");


            
            #line 126 "..\..\Views\Actions\Action.cshtml"
                                        }
                                        else if (field.Value is IEnumerable<ICustomViewModel>)
                                        {
                                            if ((field.Value as IEnumerable<ICustomViewModel>).Count() > 0)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input type=\"hidden\" name=\"");


            
            #line 131 "..\..\Views\Actions\Action.cshtml"
                                                                      Write(field.UniqueName);

            
            #line default
            #line hidden
WriteLiteral("\" value=\"[");


            
            #line 131 "..\..\Views\Actions\Action.cshtml"
                                                                                                  Write(string.Join(",", (field.Value as IEnumerable<ICustomViewModel>).Select(s => s.Serialize())));

            
            #line default
            #line hidden
WriteLiteral("]\" />\r\n");


            
            #line 132 "..\..\Views\Actions\Action.cshtml"
                                            }
                                        }
                                        else if (field.Value is Entity)
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <input type=\"hidden\" name=\"");


            
            #line 136 "..\..\Views\Actions\Action.cshtml"
                                                                  Write(field.UniqueName);

            
            #line default
            #line hidden
WriteLiteral("\" value=\"");


            
            #line 136 "..\..\Views\Actions\Action.cshtml"
                                                                                             Write((field.Value as Entity).Id);

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n");


            
            #line 137 "..\..\Views\Actions\Action.cshtml"
                                        }
                                        else
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <input type=\"hidden\" name=\"");


            
            #line 140 "..\..\Views\Actions\Action.cshtml"
                                                                  Write(field.UniqueName);

            
            #line default
            #line hidden
WriteLiteral("\" value=\"");


            
            #line 140 "..\..\Views\Actions\Action.cshtml"
                                                                                            Write(field.Value);

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n");


            
            #line 141 "..\..\Views\Actions\Action.cshtml"
                                        }
                                    }


            
            #line default
            #line hidden
WriteLiteral("                                    <input type=\"hidden\" name=\"submittedpagenames" +
"\" value=\"");


            
            #line 144 "..\..\Views\Actions\Action.cshtml"
                                                                                     Write(string.Join(",", Model.SubmittedPages.Select(p => p.GetType().Name)));

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n");



WriteLiteral("                                    <input type=\"hidden\" name=\"page\" value=\"");


            
            #line 145 "..\..\Views\Actions\Action.cshtml"
                                                                       Write(Model.Page.GetType().Name);

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n");


            
            #line 146 "..\..\Views\Actions\Action.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("\r\n                                <input type=\"submit\" style=\"position: absolute;" +
" left: -9999px; width: 1px; height: 1px;\" tabindex=\"-1\" />\r\n                    " +
"        </div>\r\n                        </form>\r\n\r\n");


            
            #line 152 "..\..\Views\Actions\Action.cshtml"
                         if ((bool)TempData["ShowSubmit"] || Model.SubmittedPages.Count != 0)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <div class=\"panel-footer\">\r\n");


            
            #line 155 "..\..\Views\Actions\Action.cshtml"
                                 if ((bool)TempData["ShowSubmit"])
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <button data-next class=\"btn btn-primary pull" +
"-right\" id=\"main-form-submit\">");


            
            #line 157 "..\..\Views\Actions\Action.cshtml"
                                                                                                          Write(Model.Action.Description(Html.LoggedInUser()));

            
            #line default
            #line hidden
WriteLiteral("</button>\r\n");


            
            #line 158 "..\..\Views\Actions\Action.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 160 "..\..\Views\Actions\Action.cshtml"
                                 if (Model.SubmittedPages.Count != 0)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <button class=\"btn btn-default pull-right\" on" +
"click=\'$(\"#back-form\").submit();\'>Back</button>\r\n");


            
            #line 163 "..\..\Views\Actions\Action.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("\r\n                                <div class=\"clearfix\"></div>\r\n                 " +
"           </div>\r\n");


            
            #line 167 "..\..\Views\Actions\Action.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 169 "..\..\Views\Actions\Action.cshtml"
                         if (Model.IsMultiPage)
                        {
                            if (Model.SubmittedPages.Count != 0)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <form method=\"post\" id=\"back-form\">\r\n");


            
            #line 174 "..\..\Views\Actions\Action.cshtml"
                                     if (hidden != null)
                                    {
                                        foreach (var field in hidden)
                                        {
                                            if (field.FieldAttribute is Realtair.Framework.Core.Actions.FieldAttributes.BulkFileUploadFieldAttribute && field.Value is IEnumerable<Attachment>)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                 <input type=\"hidden\" name=\"");


            
            #line 180 "..\..\Views\Actions\Action.cshtml"
                                                                       Write(field.UniqueName);

            
            #line default
            #line hidden

            
            #line 180 "..\..\Views\Actions\Action.cshtml"
                                                                                             WriteLiteral("\" value=\"[");

            
            #line default
            #line hidden
            
            #line 180 "..\..\Views\Actions\Action.cshtml"
                                                                                                        foreach (var a in field.Value as IEnumerable<Attachment>) { 
            
            #line default
            #line hidden
            
            #line 180 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                Write(a.Id + ",");

            
            #line default
            #line hidden
            
            #line 180 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                                  }
            
            #line default
            #line hidden
WriteLiteral("]\" />\r\n");


            
            #line 181 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is IEnumerable<Attachment>)
                                            {
                                                foreach (var file in (IEnumerable<Attachment>)field.Value)
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <input type=\"hidden\" name=\"");


            
            #line 186 "..\..\Views\Actions\Action.cshtml"
                                                                          Write(field.UniqueName);

            
            #line default
            #line hidden
WriteLiteral("\" value=\"");


            
            #line 186 "..\..\Views\Actions\Action.cshtml"
                                                                                                     Write(file.Id);

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n");


            
            #line 187 "..\..\Views\Actions\Action.cshtml"
                                                }
                                            }
                                            else if (field.Value is ICustomViewModel)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input type=\"hidden\" name=\"");


            
            #line 191 "..\..\Views\Actions\Action.cshtml"
                                                                      Write(field.UniqueName);

            
            #line default
            #line hidden
WriteLiteral("\" value=\"");


            
            #line 191 "..\..\Views\Actions\Action.cshtml"
                                                                                                 Write((field.Value as ICustomViewModel).Serialize());

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n");


            
            #line 192 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is IEnumerable<ICustomViewModel>)
                                            {
                                                if ((field.Value as IEnumerable<ICustomViewModel>).Count() > 0)
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <input type=\"hidden\" name=\"");


            
            #line 197 "..\..\Views\Actions\Action.cshtml"
                                                                          Write(field.UniqueName);

            
            #line default
            #line hidden
WriteLiteral("\" value=\"[");


            
            #line 197 "..\..\Views\Actions\Action.cshtml"
                                                                                                      Write(string.Join(",", (field.Value as IEnumerable<ICustomViewModel>).Select(s => s.Serialize())));

            
            #line default
            #line hidden
WriteLiteral("]\" />\r\n");


            
            #line 198 "..\..\Views\Actions\Action.cshtml"
                                                }
                                            }
                                            else if (field.Value is Entity)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input type=\"hidden\" name=\"");


            
            #line 202 "..\..\Views\Actions\Action.cshtml"
                                                                      Write(field.UniqueName);

            
            #line default
            #line hidden
WriteLiteral("\" value=\"");


            
            #line 202 "..\..\Views\Actions\Action.cshtml"
                                                                                                 Write((field.Value as Entity).Id);

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n");


            
            #line 203 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input type=\"hidden\" name=\"");


            
            #line 206 "..\..\Views\Actions\Action.cshtml"
                                                                      Write(field.UniqueName);

            
            #line default
            #line hidden
WriteLiteral("\" value=\"");


            
            #line 206 "..\..\Views\Actions\Action.cshtml"
                                                                                                Write(field.Value);

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n");


            
            #line 207 "..\..\Views\Actions\Action.cshtml"
                                            }
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                        <input type=\"hidden\" name=\"submittedpagen" +
"ames\" value=\"");


            
            #line 209 "..\..\Views\Actions\Action.cshtml"
                                                                                         Write(string.Join(",", Model.SubmittedPages.Select(p => p.GetType().Name)));

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n");



WriteLiteral("                                        <input type=\"hidden\" name=\"page\" value=\"");


            
            #line 210 "..\..\Views\Actions\Action.cshtml"
                                                                           Write(Model.Page.GetType().Name);

            
            #line default
            #line hidden
WriteLiteral("\" />\r\n");



WriteLiteral("                                            <input type=\"hidden\" name=\"back\" valu" +
"e=\"true\" />\r\n");


            
            #line 212 "..\..\Views\Actions\Action.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </form>\r\n");


            
            #line 214 "..\..\Views\Actions\Action.cshtml"
                            }
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </div>\r\n                </div>\r\n            </main>\r\n        " +
"    <script>\r\n                $(\'#main-form-submit\').click(function (e) {\r\n     " +
"               e.preventDefault()\r\n                    var bValid = true;\r\n     " +
"               $(document).find(\'input.required:visible\').each(function () {\r\n  " +
"                      var formgroup = $(this).closest(\'.form-group\');\r\n         " +
"               if ($(this).val() === \'\') {                            \r\n        " +
"                    formgroup.addClass(\'has-error\');\r\n                          " +
"  var label = formgroup.find(\'label.control-label\').text();\r\n\r\n                 " +
"           console.log(formgroup.find(\'div\').index(0));\r\n                       " +
"     if ($(this).closest(\'.col-md-9\').find(\'span.help-block\').length == 0)\r\n    " +
"                            $(this).closest(\'.col-md-9\').append(\'<span class=\"he" +
"lp-block\">The \' + label + \' field is required.</span>\');\r\n\r\n                    " +
"        bValid = false;\r\n                        } else {\r\n                     " +
"       formgroup.removeClass(\'has-error\');\r\n                            formgrou" +
"p.find(\'span.help-block\').remove();\r\n                        }\r\n                " +
"    });\r\n\r\n                    if (bValid) {\r\n                        $(\'.loadin" +
"g\').css(\'display\', \'block\');\r\n                        $(\'#main-form\').submit.dis" +
"abled = true;\r\n                        $(\'#main-form\').submit();\r\n              " +
"      }\r\n                });\r\n            </script>\r\n        </body>\r\n");


            
            #line 248 "..\..\Views\Actions\Action.cshtml"
                                            }

            
            #line default
            #line hidden

        }
    }
}
#pragma warning restore 1591
