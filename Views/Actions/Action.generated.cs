#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    
    #line 8 "..\..\Views\Actions\Action.cshtml"
    using System;
    
    #line default
    #line hidden
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 4 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Core.Actions;
    
    #line default
    #line hidden
    
    #line 2 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Core.Entities;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Core.Interfaces;
    
    #line default
    #line hidden
    
    #line 5 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Core.Web.Utilities;
    
    #line default
    #line hidden
    
    #line 7 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Enquiries.Entities;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Views\Actions\Action.cshtml"
    using Realtair.Framework.Enquiries.Interfaces;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Actions/Action.cshtml")]
    public partial class _Views_Actions_Action_cshtml : System.Web.Mvc.WebViewPage<Realtair.Framework.Core.Web.Controllers.ActionsController.ActionViewModel>
    {
        public _Views_Actions_Action_cshtml()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n");

            
            #line 10 "..\..\Views\Actions\Action.cshtml"
  
    var detailsTemplate = "-";
    var cancelActionUrl = "";

    if (Request.QueryString["ReturnUrl"] != null)
    {
        cancelActionUrl = Request.QueryString["ReturnUrl"].ToString();
    }

    if (Model.Action.This != null)
    {
        detailsTemplate = $"{Model.Action.This.ActualType().Name}/{Model.Action.GetType().Name}";
    }

    if (Html.ViewExists(detailsTemplate))
    {
        Layout = null;
        Html.RenderPartial(detailsTemplate, Model.Action);
    }
    else
    {
        IEnumerable<Field> shown;
        IEnumerable<Field> shownWithFieldSets;
        IEnumerable<Field> hidden;

        TempData["ShowSubmit"] = true;

        if (Model.IsMultiPage)
        {
            shown = Model.FieldsForPage;
            shownWithFieldSets = Model.FieldsForPage.Where(f => f.FieldSetAttribute != null).ToList();
            hidden = Model.HiddenFieldsForPage;
        }
        else
        {
            shown = Model.Fields;
            shownWithFieldSets = Model.Fields.Where(f => f.FieldSetAttribute != null).ToList();
            hidden = null;
        }


            
            #line default
            #line hidden
WriteLiteral("        <div");

WriteLiteral(" class=\"content bg-grey-lt\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 51 "..\..\Views\Actions\Action.cshtml"
       Write(Html.Partial("FlowerHorn/MobileNavigation"));

            
            #line default
            #line hidden
WriteLiteral("\r\n            <div");

WriteLiteral(" id=\"page-wrapper\"");

WriteLiteral(" class=\"padding-sides-sm pad-form-mob\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"col-sm-10 col-sm-offset-1\"");

WriteLiteral(">\r\n                        ");

WriteLiteral("\r\n                        <h2>\r\n");

            
            #line 57 "..\..\Views\Actions\Action.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 57 "..\..\Views\Actions\Action.cshtml"
                             if (Model.IsMultiPage)
                            {
                                
            
            #line default
            #line hidden
            
            #line 59 "..\..\Views\Actions\Action.cshtml"
                           Write(Model.Page.Name.ToUpper());

            
            #line default
            #line hidden
            
            #line 59 "..\..\Views\Actions\Action.cshtml"
                                                          
                            }
                            else
                            {
                                
            
            #line default
            #line hidden
            
            #line 63 "..\..\Views\Actions\Action.cshtml"
                           Write(Model.Action.Description(Html.LoggedInUser()).ToUpper());

            
            #line default
            #line hidden
            
            #line 63 "..\..\Views\Actions\Action.cshtml"
                                                                                        
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </h2>\r\n\r\n");

            
            #line 67 "..\..\Views\Actions\Action.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 67 "..\..\Views\Actions\Action.cshtml"
                          
                            var parentEnquiry = (Model.Action.This as IHasParentEnquiry)?.ParentEnquiry;
                            if (parentEnquiry != null)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <h3");

WriteLiteral(" class=\"no-margin-tb\"");

WriteLiteral(">\r\n                                    <i");

WriteLiteral(" class=\"fa fa-home\"");

WriteLiteral("></i> ");

            
            #line 72 "..\..\Views\Actions\Action.cshtml"
                                                           Write(parentEnquiry.Description(Html.LoggedInUser()));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </h3>\r\n");

WriteLiteral("                                <br />\r\n");

            
            #line 75 "..\..\Views\Actions\Action.cshtml"
                            }
                        
            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n                        ");

WriteLiteral("\r\n");

            
            #line 79 "..\..\Views\Actions\Action.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 79 "..\..\Views\Actions\Action.cshtml"
                         if (Model.Action.HasValidated && !Model.Action.IsValid)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <div");

WriteLiteral(" class=\"col-md-12\"");

WriteLiteral(" style=\"padding: 0;\"");

WriteLiteral(">\r\n");

            
            #line 82 "..\..\Views\Actions\Action.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 82 "..\..\Views\Actions\Action.cshtml"
                                 foreach (var error in Model.Action.Errors.Where(e => e.MemberNames.Count() == 0))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\"alert alert-danger\"");

WriteLiteral(">");

            
            #line 84 "..\..\Views\Actions\Action.cshtml"
                                                               Write(error.ErrorMessage);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");

            
            #line 85 "..\..\Views\Actions\Action.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n");

            
            #line 87 "..\..\Views\Actions\Action.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                            ");

WriteLiteral("\r\n                            <div");

WriteLiteral(" class=\"col-sm-12\"");

WriteLiteral(">\r\n                                ");

WriteLiteral("\r\n                                <form");

WriteLiteral(" class=\"form-horizontal panel panel-body form-padding\"");

WriteLiteral(" id=\"main-form\"");

WriteLiteral(" method=\"post\"");

WriteLiteral(">\r\n");

            
            #line 127 "..\..\Views\Actions\Action.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 127 "..\..\Views\Actions\Action.cshtml"
                                     foreach (var field in shown)
                                    {
                                        if (field.FieldSetAttribute != null)
                                        {
                                            var fieldSetItems = shownWithFieldSets.Where(s => s.FieldSetAttribute.Legend == field.FieldSetAttribute.Legend).ToList();
                                            if (fieldSetItems.Any())
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <fieldset");

WriteLiteral(" class=\"margin-t-md\"");

WriteLiteral(">\r\n                                                    <legend>");

            
            #line 135 "..\..\Views\Actions\Action.cshtml"
                                                       Write(field.FieldSetAttribute.Legend);

            
            #line default
            #line hidden
WriteLiteral("</legend>\r\n                                                    <div");

WriteLiteral(" class=\"p-l-30\"");

WriteLiteral(">\r\n");

            
            #line 137 "..\..\Views\Actions\Action.cshtml"
                                                        
            
            #line default
            #line hidden
            
            #line 137 "..\..\Views\Actions\Action.cshtml"
                                                         foreach (var item in fieldSetItems)
                                                        {
                                                            var fieldWithReturnType = $"Fields/_{item.PropertyType.Name}_{item.FieldAttribute.GetType().Name.Substring(0, item.FieldAttribute.GetType().Name.Length - "Attribute".Length)}";
                                                            var fieldWithoutReturnType = $"Fields/_{item.FieldAttribute.GetType().Name.Substring(0, item.FieldAttribute.GetType().Name.Length - "Attribute".Length)}";
                                                            var fieldThatWorksForBoth = $"Fields/_{item.PropertyType.Name}_Field";

                                                            if (Html.ViewExists(fieldWithReturnType))
                                                            {
                                                                Html.RenderPartial(fieldWithReturnType, item);
                                                            }
                                                            else if (Html.ViewExists(fieldWithoutReturnType))
                                                            {
                                                                Html.RenderPartial(fieldWithoutReturnType, item);
                                                            }
                                                            else if (Html.ViewExists(fieldThatWorksForBoth))
                                                            {
                                                                Html.RenderPartial(fieldThatWorksForBoth, item);
                                                            }
                                                            else
                                                            {


            
            #line default
            #line hidden
WriteLiteral("                                                                <p> Cannot render" +
" field view, looked for both ");

            
            #line 158 "..\..\Views\Actions\Action.cshtml"
                                                                                                         Write(fieldWithReturnType);

            
            #line default
            #line hidden
WriteLiteral(" and ");

            
            #line 158 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                  Write(fieldWithoutReturnType);

            
            #line default
            #line hidden
WriteLiteral(" </p>\r\n");

            
            #line 159 "..\..\Views\Actions\Action.cshtml"

                                                            }
                                                        }

            
            #line default
            #line hidden
WriteLiteral("                                                    </div>\r\n                     " +
"                           </fieldset>");

            
            #line 163 "..\..\Views\Actions\Action.cshtml"
                                                           shownWithFieldSets = shownWithFieldSets.Except(fieldSetItems).ToList();
                                            }
                                        }
                                        else
                                        {
                                            var fieldWithReturnType = $"Fields/_{field.PropertyType.Name}_{field.FieldAttribute.GetType().Name.Substring(0, field.FieldAttribute.GetType().Name.Length - "Attribute".Length)}";
                                            var fieldWithoutReturnType = $"Fields/_{field.FieldAttribute.GetType().Name.Substring(0, field.FieldAttribute.GetType().Name.Length - "Attribute".Length)}";
                                            var fieldThatWorksForBoth = $"Fields/_{field.PropertyType.Name}_Field";

                                            if (Html.ViewExists(fieldWithReturnType))
                                            {
                                                Html.RenderPartial(fieldWithReturnType, field);
                                            }
                                            else if (Html.ViewExists(fieldWithoutReturnType))
                                            {
                                                Html.RenderPartial(fieldWithoutReturnType, field);
                                            }
                                            else if (Html.ViewExists(fieldThatWorksForBoth))
                                            {
                                                Html.RenderPartial(fieldThatWorksForBoth, field);
                                            }
                                            else
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <p>Cannot render field view, look" +
"ed for both ");

            
            #line 186 "..\..\Views\Actions\Action.cshtml"
                                                                                        Write(fieldWithReturnType);

            
            #line default
            #line hidden
WriteLiteral(" and ");

            
            #line 186 "..\..\Views\Actions\Action.cshtml"
                                                                                                                 Write(fieldWithoutReturnType);

            
            #line default
            #line hidden
WriteLiteral("</p>\r\n");

            
            #line 187 "..\..\Views\Actions\Action.cshtml"
                                            }
                                        }
                                    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 191 "..\..\Views\Actions\Action.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 191 "..\..\Views\Actions\Action.cshtml"
                                     if (hidden != null)
                                    {
                                        foreach (var field in hidden)
                                        {
                                            if (field.FieldAttribute is Realtair.Framework.Core.Actions.FieldAttributes.BulkFileUploadFieldAttribute && field.Value is IEnumerable<Attachment>)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 11683), Tuple.Create("\"", 11707)
            
            #line 197 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 11690), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 11690), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 11708), Tuple.Create("\"", 11794)
, Tuple.Create(Tuple.Create("", 11716), Tuple.Create("[", 11716), true)
, Tuple.Create(Tuple.Create("", 11717), Tuple.Create<System.Object, System.Int32>(new System.Web.WebPages.HelperResult(__razor_attribute_value_writer => {

            
            #line 197 "..\..\Views\Actions\Action.cshtml"
                                                                                                       foreach (var a in field.Value as IEnumerable<Attachment>) { 
            
            #line default
            #line hidden
            
            #line 197 "..\..\Views\Actions\Action.cshtml"
                                                                                                                             WriteTo(__razor_attribute_value_writer, a.Id + ",");

            
            #line default
            #line hidden
            
            #line 197 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                                 }
            
            #line default
            #line hidden
}), 11717), false)
, Tuple.Create(Tuple.Create("", 11793), Tuple.Create("]", 11793), true)
);

WriteLiteral(" />\r\n");

            
            #line 198 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is IList<Attachment>)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 12050), Tuple.Create("\"", 12074)
            
            #line 201 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 12057), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 12057), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 12075), Tuple.Create("\"", 12166)
, Tuple.Create(Tuple.Create("", 12083), Tuple.Create("[", 12083), true)
            
            #line 201 "..\..\Views\Actions\Action.cshtml"
                      , Tuple.Create(Tuple.Create("", 12084), Tuple.Create<System.Object, System.Int32>(string.Join(",",((IList<Attachment>)field.Value).Select(f => f.Id.ToString()))
            
            #line default
            #line hidden
, 12084), false)
, Tuple.Create(Tuple.Create("", 12165), Tuple.Create("]", 12165), true)
);

WriteLiteral(" />\r\n");

            
            #line 202 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is ICustomViewModel)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 12421), Tuple.Create("\"", 12445)
            
            #line 205 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 12428), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 12428), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 12446), Tuple.Create("\"", 12502)
            
            #line 205 "..\..\Views\Actions\Action.cshtml"
                     , Tuple.Create(Tuple.Create("", 12454), Tuple.Create<System.Object, System.Int32>((field.Value as ICustomViewModel).Serialize()
            
            #line default
            #line hidden
, 12454), false)
);

WriteLiteral(" />\r\n");

            
            #line 206 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is IEnumerable<ICustomViewModel>)
                                            {
                                                if ((field.Value as IEnumerable<ICustomViewModel>).Count() > 0)
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 12938), Tuple.Create("\"", 12962)
            
            #line 211 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 12945), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 12945), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 12963), Tuple.Create("\"", 13067)
, Tuple.Create(Tuple.Create("", 12971), Tuple.Create("[", 12971), true)
            
            #line 211 "..\..\Views\Actions\Action.cshtml"
                          , Tuple.Create(Tuple.Create("", 12972), Tuple.Create<System.Object, System.Int32>(string.Join(",", (field.Value as IEnumerable<ICustomViewModel>).Select(s => s.Serialize()))
            
            #line default
            #line hidden
, 12972), false)
, Tuple.Create(Tuple.Create("", 13066), Tuple.Create("]", 13066), true)
);

WriteLiteral(" />\r\n");

            
            #line 212 "..\..\Views\Actions\Action.cshtml"
                                                }
                                            }
                                            else if (field.Value is IEnumerable<Entity>)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 13376), Tuple.Create("\"", 13400)
            
            #line 216 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 13383), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 13383), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 13401), Tuple.Create("\"", 13497)
, Tuple.Create(Tuple.Create("", 13409), Tuple.Create("[", 13409), true)
            
            #line 216 "..\..\Views\Actions\Action.cshtml"
                      , Tuple.Create(Tuple.Create("", 13410), Tuple.Create<System.Object, System.Int32>(string.Join(",", (field.Value as IEnumerable<Entity>).Select(e => e.Id.ToString()))
            
            #line default
            #line hidden
, 13410), false)
, Tuple.Create(Tuple.Create("", 13496), Tuple.Create("]", 13496), true)
);

WriteLiteral(" />\r\n");

            
            #line 217 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is Entity)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 13742), Tuple.Create("\"", 13766)
            
            #line 220 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 13749), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 13749), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 13767), Tuple.Create("\"", 13804)
            
            #line 220 "..\..\Views\Actions\Action.cshtml"
                     , Tuple.Create(Tuple.Create("", 13775), Tuple.Create<System.Object, System.Int32>((field.Value as Entity).Id
            
            #line default
            #line hidden
, 13775), false)
);

WriteLiteral(" />\r\n");

            
            #line 221 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.FieldAttribute is Realtair.Framework.Core.Actions.FieldAttributes.WidgetFieldAttribute)
                                            {

                                            }
                                            else if (field.Value is bool?[])
                                            {
                                                var values = "";
                                                foreach (var v in (field.Value as IEnumerable<bool?>).ToList())
                                                {
                                                    if (v != null) { values += v + ","; }
                                                    else { values += "null,"; }

                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 14749), Tuple.Create("\"", 14773)
            
            #line 235 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 14756), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 14756), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 14774), Tuple.Create("\"", 14835)
, Tuple.Create(Tuple.Create("", 14782), Tuple.Create("[", 14782), true)
            
            #line 235 "..\..\Views\Actions\Action.cshtml"
                      , Tuple.Create(Tuple.Create("", 14783), Tuple.Create<System.Object, System.Int32>(values.Substring(0, values.Length - 1).ToLower()
            
            #line default
            #line hidden
, 14783), false)
, Tuple.Create(Tuple.Create("", 14834), Tuple.Create("]", 14834), true)
);

WriteLiteral(" />\r\n");

            
            #line 236 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is DateTime)
                                            {
                                                var date = (DateTime)field.Value;

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 15165), Tuple.Create("\"", 15189)
            
            #line 240 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 15172), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 15172), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 15190), Tuple.Create("\"", 15260)
, Tuple.Create(Tuple.Create("", 15198), Tuple.Create<System.Object, System.Int32>(new System.Web.WebPages.HelperResult(__razor_attribute_value_writer => {

            
            #line 240 "..\..\Views\Actions\Action.cshtml"
                                                                                                      if(date > DateTime.MinValue) { 
            
            #line default
            #line hidden
            
            #line 240 "..\..\Views\Actions\Action.cshtml"
                                                                                              WriteTo(__razor_attribute_value_writer, date.ToString("yyyy-MM-dd"));

            
            #line default
            #line hidden
            
            #line 240 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                  }
            
            #line default
            #line hidden
}), 15198), false)
);

WriteLiteral(" />\r\n");

            
            #line 241 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is bool)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 15503), Tuple.Create("\"", 15527)
            
            #line 244 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 15510), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 15510), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 15528), Tuple.Create("\"", 15559)
            
            #line 244 "..\..\Views\Actions\Action.cshtml"
                    , Tuple.Create(Tuple.Create("", 15536), Tuple.Create<System.Object, System.Int32>(field.Value.ToString()
            
            #line default
            #line hidden
, 15536), false)
);

WriteLiteral(" />\r\n");

            
            #line 245 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 15777), Tuple.Create("\"", 15801)
            
            #line 248 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 15784), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 15784), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 15802), Tuple.Create("\"", 15822)
            
            #line 248 "..\..\Views\Actions\Action.cshtml"
                    , Tuple.Create(Tuple.Create("", 15810), Tuple.Create<System.Object, System.Int32>(field.Value
            
            #line default
            #line hidden
, 15810), false)
);

WriteLiteral(" />\r\n");

            
            #line 249 "..\..\Views\Actions\Action.cshtml"
                                            }
                                        }


            
            #line default
            #line hidden
WriteLiteral("                                        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"submittedpagenames\"");

WriteAttribute("value", Tuple.Create(" value=\"", 16006), Tuple.Create("\"", 16083)
            
            #line 252 "..\..\Views\Actions\Action.cshtml"
             , Tuple.Create(Tuple.Create("", 16014), Tuple.Create<System.Object, System.Int32>(string.Join(",", Model.SubmittedPages.Select(p => p.GetType().Name))
            
            #line default
            #line hidden
, 16014), false)
);

WriteLiteral(" />\r\n");

WriteLiteral("                                        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"page\"");

WriteAttribute("value", Tuple.Create(" value=\"", 16161), Tuple.Create("\"", 16195)
            
            #line 253 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 16169), Tuple.Create<System.Object, System.Int32>(Model.Page.GetType().Name
            
            #line default
            #line hidden
, 16169), false)
);

WriteLiteral(" />\r\n");

            
            #line 254 "..\..\Views\Actions\Action.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" style=\"position: absolute; left: -9999px; width: 1px; height: 1px;\"");

WriteLiteral(" tabindex=\"-1\"");

WriteLiteral(" />\r\n                                </form>\r\n\r\n");

            
            #line 259 "..\..\Views\Actions\Action.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 259 "..\..\Views\Actions\Action.cshtml"
                                 if ((bool)TempData["ShowSubmit"] || Model.SubmittedPages.Count != 0)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" class=\"form-group margin-tb-md\"");

WriteLiteral(">\r\n                                        <div");

WriteLiteral(" class=\"col-sm-12\"");

WriteLiteral(">\r\n                                            <ul");

WriteLiteral(" class=\"pull-right list-inline\"");

WriteLiteral(">\r\n");

            
            #line 264 "..\..\Views\Actions\Action.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 264 "..\..\Views\Actions\Action.cshtml"
                                                 if (Model.SubmittedPages.Count != 0)
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <li><a");

WriteLiteral(" href=\"javascript:void(0);\"");

WriteLiteral(" class=\"btn btn-task btn-form btn-trans-grey uppercase\"");

WriteLiteral(" onclick=\'$(\"#back-form\").submit();\'");

WriteLiteral(">BACK</a></li>\r\n");

            
            #line 267 "..\..\Views\Actions\Action.cshtml"
                                                }
                                                else
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <li><a");

WriteLiteral(" href=\"javascript:void(0);\"");

WriteLiteral(" class=\"btn btn-task btn-form btn-trans-red uppercase\"");

WriteLiteral(" onclick=\'$(\"#cancel-form\").submit();\'");

WriteLiteral(">CANCEL</a></li>\r\n");

            
            #line 271 "..\..\Views\Actions\Action.cshtml"
                                                }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 273 "..\..\Views\Actions\Action.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 273 "..\..\Views\Actions\Action.cshtml"
                                                 if ((bool)TempData["ShowSubmit"])
                                                {
                                                    if (!Model.IsMultiPage)
                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                        <li><a");

WriteLiteral(" href=\"javascript:void(0);\"");

WriteLiteral(" class=\"btn btn-task btn-form btn-trans-green uppercase\"");

WriteLiteral(" onclick=\'$(\"#main-form\").submit();\'");

WriteLiteral(">");

            
            #line 277 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                                 Write(Model.Action.SubmitValue);

            
            #line default
            #line hidden
WriteLiteral("</a></li>\r\n");

            
            #line 278 "..\..\Views\Actions\Action.cshtml"
                                                    }
                                                    else
                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                        <li><a");

WriteLiteral(" href=\"javascript:void(0);\"");

WriteLiteral(" class=\"btn btn-task btn-form btn-trans-grey uppercase\"");

WriteLiteral(" onclick=\'$(\"#main-form\").submit();\'");

WriteLiteral(">");

            
            #line 281 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                                Write(Model.Action.SubmitValue);

            
            #line default
            #line hidden
WriteLiteral("</a></li>\r\n");

            
            #line 282 "..\..\Views\Actions\Action.cshtml"
                                                    }
                                                }

            
            #line default
            #line hidden
WriteLiteral("                                            </ul>\r\n                              " +
"          </div>\r\n                                    </div>\r\n");

            
            #line 287 "..\..\Views\Actions\Action.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n                        </div>\r\n\r\n");

            
            #line 291 "..\..\Views\Actions\Action.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 291 "..\..\Views\Actions\Action.cshtml"
                         if (Model.IsMultiPage)
                        {
                            if (Model.SubmittedPages.Count != 0)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <form");

WriteLiteral(" method=\"post\"");

WriteLiteral(" id=\"back-form\"");

WriteLiteral(">\r\n");

            
            #line 296 "..\..\Views\Actions\Action.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 296 "..\..\Views\Actions\Action.cshtml"
                                     if (hidden != null)
                                    {
                                        foreach (var field in hidden)
                                        {
                                            if (field.FieldAttribute is Realtair.Framework.Core.Actions.FieldAttributes.BulkFileUploadFieldAttribute && field.Value is IEnumerable<Attachment>)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 19506), Tuple.Create("\"", 19530)
            
            #line 302 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 19513), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 19513), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 19531), Tuple.Create("\"", 19617)
, Tuple.Create(Tuple.Create("", 19539), Tuple.Create("[", 19539), true)
, Tuple.Create(Tuple.Create("", 19540), Tuple.Create<System.Object, System.Int32>(new System.Web.WebPages.HelperResult(__razor_attribute_value_writer => {

            
            #line 302 "..\..\Views\Actions\Action.cshtml"
                                                                                                       foreach (var a in field.Value as IEnumerable<Attachment>) { 
            
            #line default
            #line hidden
            
            #line 302 "..\..\Views\Actions\Action.cshtml"
                                                                                                                             WriteTo(__razor_attribute_value_writer, a.Id + ",");

            
            #line default
            #line hidden
            
            #line 302 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                                 }
            
            #line default
            #line hidden
}), 19540), false)
, Tuple.Create(Tuple.Create("", 19616), Tuple.Create("]", 19616), true)
);

WriteLiteral(" />\r\n");

            
            #line 303 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is IEnumerable<Attachment>)
                                            {
                                                foreach (var file in (IEnumerable<Attachment>)field.Value)
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 20042), Tuple.Create("\"", 20066)
            
            #line 308 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 20049), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 20049), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 20067), Tuple.Create("\"", 20085)
            
            #line 308 "..\..\Views\Actions\Action.cshtml"
                         , Tuple.Create(Tuple.Create("", 20075), Tuple.Create<System.Object, System.Int32>(file.Id
            
            #line default
            #line hidden
, 20075), false)
);

WriteLiteral(" />");

            
            #line 308 "..\..\Views\Actions\Action.cshtml"
                                                                                                                       }
                                            }
                                            else if (field.Value is ICustomViewModel)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 20341), Tuple.Create("\"", 20365)
            
            #line 312 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 20348), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 20348), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 20366), Tuple.Create("\"", 20422)
            
            #line 312 "..\..\Views\Actions\Action.cshtml"
                     , Tuple.Create(Tuple.Create("", 20374), Tuple.Create<System.Object, System.Int32>((field.Value as ICustomViewModel).Serialize()
            
            #line default
            #line hidden
, 20374), false)
);

WriteLiteral(" />\r\n");

            
            #line 313 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is IEnumerable<ICustomViewModel>)
                                            {
                                                if ((field.Value as IEnumerable<ICustomViewModel>).Count() > 0)
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 20858), Tuple.Create("\"", 20882)
            
            #line 318 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 20865), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 20865), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 20883), Tuple.Create("\"", 20987)
, Tuple.Create(Tuple.Create("", 20891), Tuple.Create("[", 20891), true)
            
            #line 318 "..\..\Views\Actions\Action.cshtml"
                          , Tuple.Create(Tuple.Create("", 20892), Tuple.Create<System.Object, System.Int32>(string.Join(",", (field.Value as IEnumerable<ICustomViewModel>).Select(s => s.Serialize()))
            
            #line default
            #line hidden
, 20892), false)
, Tuple.Create(Tuple.Create("", 20986), Tuple.Create("]", 20986), true)
);

WriteLiteral(" />");

            
            #line 318 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                                                             }
                                            }
                                            else if (field.Value is Entity)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 21233), Tuple.Create("\"", 21257)
            
            #line 322 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 21240), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 21240), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 21258), Tuple.Create("\"", 21295)
            
            #line 322 "..\..\Views\Actions\Action.cshtml"
                     , Tuple.Create(Tuple.Create("", 21266), Tuple.Create<System.Object, System.Int32>((field.Value as Entity).Id
            
            #line default
            #line hidden
, 21266), false)
);

WriteLiteral(" />\r\n");

            
            #line 323 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is IEnumerable<Entity>)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 21553), Tuple.Create("\"", 21577)
            
            #line 326 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 21560), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 21560), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 21578), Tuple.Create("\"", 21674)
, Tuple.Create(Tuple.Create("", 21586), Tuple.Create("[", 21586), true)
            
            #line 326 "..\..\Views\Actions\Action.cshtml"
                      , Tuple.Create(Tuple.Create("", 21587), Tuple.Create<System.Object, System.Int32>(string.Join(",", (field.Value as IEnumerable<Entity>).Select(e => e.Id.ToString()))
            
            #line default
            #line hidden
, 21587), false)
, Tuple.Create(Tuple.Create("", 21673), Tuple.Create("]", 21673), true)
);

WriteLiteral(" />\r\n");

            
            #line 327 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.FieldAttribute is Realtair.Framework.Core.Actions.FieldAttributes.WidgetFieldAttribute)
                                            {

                                            }
                                            else if (field.Value is bool?[])
                                            {
                                                var values = "";
                                                foreach (var v in (field.Value as IEnumerable<bool?>).ToList())
                                                {
                                                    if (v != null) { values += v + ","; }
                                                    else { values += "null,"; }

                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 22619), Tuple.Create("\"", 22643)
            
            #line 341 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 22626), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 22626), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 22644), Tuple.Create("\"", 22705)
, Tuple.Create(Tuple.Create("", 22652), Tuple.Create("[", 22652), true)
            
            #line 341 "..\..\Views\Actions\Action.cshtml"
                      , Tuple.Create(Tuple.Create("", 22653), Tuple.Create<System.Object, System.Int32>(values.Substring(0, values.Length - 1).ToLower()
            
            #line default
            #line hidden
, 22653), false)
, Tuple.Create(Tuple.Create("", 22704), Tuple.Create("]", 22704), true)
);

WriteLiteral(" />\r\n");

            
            #line 342 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is DateTime)
                                            {
                                                var date = (DateTime)field.Value;

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 23035), Tuple.Create("\"", 23059)
            
            #line 346 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 23042), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 23042), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 23060), Tuple.Create("\"", 23130)
, Tuple.Create(Tuple.Create("", 23068), Tuple.Create<System.Object, System.Int32>(new System.Web.WebPages.HelperResult(__razor_attribute_value_writer => {

            
            #line 346 "..\..\Views\Actions\Action.cshtml"
                                                                                                      if(date > DateTime.MinValue) { 
            
            #line default
            #line hidden
            
            #line 346 "..\..\Views\Actions\Action.cshtml"
                                                                                              WriteTo(__razor_attribute_value_writer, date.ToString("yyyy-MM-dd"));

            
            #line default
            #line hidden
            
            #line 346 "..\..\Views\Actions\Action.cshtml"
                                                                                                                                                                  }
            
            #line default
            #line hidden
}), 23068), false)
);

WriteLiteral(" />\r\n");

            
            #line 347 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else if (field.Value is bool)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 23373), Tuple.Create("\"", 23397)
            
            #line 350 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 23380), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 23380), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 23398), Tuple.Create("\"", 23429)
            
            #line 350 "..\..\Views\Actions\Action.cshtml"
                    , Tuple.Create(Tuple.Create("", 23406), Tuple.Create<System.Object, System.Int32>(field.Value.ToString()
            
            #line default
            #line hidden
, 23406), false)
);

WriteLiteral(" />\r\n");

            
            #line 351 "..\..\Views\Actions\Action.cshtml"
                                            }
                                            else
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("name", Tuple.Create(" name=\"", 23647), Tuple.Create("\"", 23671)
            
            #line 354 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 23654), Tuple.Create<System.Object, System.Int32>(field.UniqueName
            
            #line default
            #line hidden
, 23654), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 23672), Tuple.Create("\"", 23692)
            
            #line 354 "..\..\Views\Actions\Action.cshtml"
                    , Tuple.Create(Tuple.Create("", 23680), Tuple.Create<System.Object, System.Int32>(field.Value
            
            #line default
            #line hidden
, 23680), false)
);

WriteLiteral(" />\r\n");

            
            #line 355 "..\..\Views\Actions\Action.cshtml"
                                            }
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"submittedpagenames\"");

WriteAttribute("value", Tuple.Create(" value=\"", 23874), Tuple.Create("\"", 23951)
            
            #line 357 "..\..\Views\Actions\Action.cshtml"
             , Tuple.Create(Tuple.Create("", 23882), Tuple.Create<System.Object, System.Int32>(string.Join(",", Model.SubmittedPages.Select(p => p.GetType().Name))
            
            #line default
            #line hidden
, 23882), false)
);

WriteLiteral(" />\r\n");

WriteLiteral("                                        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"page\"");

WriteAttribute("value", Tuple.Create(" value=\"", 24029), Tuple.Create("\"", 24063)
            
            #line 358 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 24037), Tuple.Create<System.Object, System.Int32>(Model.Page.GetType().Name
            
            #line default
            #line hidden
, 24037), false)
);

WriteLiteral(" />\r\n");

WriteLiteral("                                        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"back\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" />\r\n");

            
            #line 360 "..\..\Views\Actions\Action.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </form>\r\n");

            
            #line 362 "..\..\Views\Actions\Action.cshtml"
                            }
                        }

            
            #line default
            #line hidden
WriteLiteral("                        <form");

WriteLiteral(" method=\"post\"");

WriteLiteral(" id=\"cancel-form\"");

WriteAttribute("action", Tuple.Create(" action=\"", 24357), Tuple.Create("\"", 24384)
            
            #line 364 "..\..\Views\Actions\Action.cshtml"
, Tuple.Create(Tuple.Create("", 24366), Tuple.Create<System.Object, System.Int32>(cancelActionUrl
            
            #line default
            #line hidden
, 24366), false)
);

WriteLiteral(">\r\n                            <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"cancel\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" />\r\n                        </form>\r\n                    </div>\r\n\r\n             " +
"   </div>\r\n            </div>\r\n        </div>\r\n");

WriteLiteral(@"        <script>
            $('#main-form-submit').click(function (e) {
				e.preventDefault()
				var bValid = true;
				$(document).find('input.required:visible').each(function () {
					var formgroup = $(this).closest('.form-group');
					if ($(this).val() === '') {
						formgroup.addClass('has-error');
						var label = formgroup.find('label.control-label').text();

						console.log(formgroup.find('div').index(0));
						if ($(this).closest('.col-md-9').find('span.help-block').length == 0)
							$(this).closest('.col-md-9').append('<span class=""help-block"">The ' + label + ' field is required.</span>');

						bValid = false;
					} else {
						formgroup.removeClass('has-error');
						formgroup.find('span.help-block').remove();
					}
				});

				if (bValid) {
					$('.preloader').css('display', 'block');
					$('#main-form').submit.disabled = true;
					$('#main-form').submit();
				}
			});
        </script>
");

            
            #line 400 "..\..\Views\Actions\Action.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

DefineSection("Scripts", () => {

WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 404 "..\..\Views\Actions\Action.cshtml"
Write(Html.RenderDelayed());

            
            #line default
            #line hidden
WriteLiteral("\r\n");

});

        }
    }
}
#pragma warning restore 1591
